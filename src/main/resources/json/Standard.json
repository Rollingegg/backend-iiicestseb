{"title": "The concept of CMOS OOK transmitter using low voltage self-oscillating active inductor", "authors": [{"name": "Grzegorz Szczepkowski", "affiliation": "CTVR - The Telecommunication Research Centre, National University of Ireland Maynooth", "firstName": "Grzegorz", "lastName": "Szczepkowski", "id": "37590825200"}, {"name": "John Dooley", "affiliation": "CTVR - The Telecommunication Research Centre, National University of Ireland Maynooth", "firstName": "John", "lastName": "Dooley", "id": "37268227100"}, {"name": "Ronan Farrell", "affiliation": "CTVR - The Telecommunication Research Centre, National University of Ireland Maynooth", "firstName": "Ronan", "lastName": "Farrell", "id": "37290828800"}], "abstract": "This paper presents a low voltage, On-Off Keying (OOK) CMOS integrated transmitter for ISM 434 MHz biomedical applications using a concept of a novel self-oscillating (degenerated) active inductor. A thorough theoretical analysis of the oscillator is presented, together with simulated results using UMC 90 nm 1P9M RF process libraries. The proposed oscillator achieves an average phase noise of -93 dBc/Hz at 1 MHz offset from 434 MHz carrier frequency, with a relative tuning range of 26% to compensate for process variations. The transmitter allows modulation speeds up to 100 Mbps with RF output power of -4 dBm to 50 \u03a9 load from 1 V power supply.", "keywords": [{"type": "IEEE Keywords", "kwd": ["Transmitters", "Phase noise", "Active inductors", "Radio frequency", "Switches"]}, {"type": "INSPEC: Controlled Indexing", "kwd": ["amplitude shift keying", "CMOS integrated circuits", "inductors", "transmitters"]}, {"type": "INSPEC: Non-Controlled Indexing", "kwd": ["CMOS OOK transmitter", "low voltage self-oscillating active inductor", "on-off keying CMOS integrated transmitter", "ISM 434 MHz biomedical application", "UMC 90 nm 1P9M RF process libraries", "frequency 434 MHz", "size 90 nm"]}], "publication": "ICSES 2010 International Conference on Signals and Electronic Circuits", "doi": "", "ref": [{"order": "1", "text": "P. Quinlan, P. Crowley, M. Chanca, S. Hudson, B. Hunt, K. Mulvaney, G. Retz, C. E. O\u2019 Sullivan, P. Walsh, \"A multimode 0.3\u2013200-kb/s transceiver for the 433/868/915-MHz bands in 0.25-um CMOS\", <em>IEEE Journal of Solid-State Circuits</em>, vol. 39, no. 12, pp. 2297-2310, 2004.", "title": "A multimode 0.3\u2013200-kb/s transceiver for the 433/868/915-MHz bands in 0.25-um CMOS", "context": [{"sec": "sec1", "text": " Although simple, OOK allows transmission of digital signals with relative ease thus it has become a popular choice for biomedical applications [1]\u2013[3].", "part": "1"}], "links": {"documentLink": "/document/1362838", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=1362838", "abstract": "A fully integrated transceiver suitable for low-data-rate wireless telemetry and sensor networks operating in the license-free ISM frequency bands at 433, 868, or 915 MHz implemented in 0.25-/spl mu/m CMOS is presented. G/FSK, ASK, and OOK modulation formats are supported at data rates from 0.3 to 200 kb/s. The transceiver&#39;s analog building blocks include a low-noise amplifier, mixer, channel filter, received signal-strength indication, frequency synthesizer, voltage-controlled oscillator, and p...", "pdfSize": "1376KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=A+multimode+0.3%E2%80%93200-kb%2Fs+transceiver+for+the+433%2F868%2F915-MHz+bands+in+0.25-um+CMOS&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref1"}, {"order": "2", "text": "J. Ryu, M. Kim, J. Lee, B.-S. Kim, M.-Q. Lee, S. Nam, \"Low power OOK transmitter for wireless capsule endoscope\", <em>Microwave Symposium 2007. IEEE/MTT-S International</em>, pp. 855-858, 2007.", "title": "Low power OOK transmitter for wireless capsule endoscope", "context": [{"sec": "sec1", "text": " Although simple, OOK allows transmission of digital signals with relative ease thus it has become a popular choice for biomedical applications [1]\u2013[2][3].", "part": "1"}], "links": {"abstract": "A new structure of on-off keying(OOK) transmitter with low power consumption and high data rate is proposed using a current-reused CMOS differential LC-VCO[1] for wireless capsule endoscope application. The carrier frequency (440MHz) of the transmitter is determined as the minimum loss frequency point considering the antenna loss and the loss property of human body, etc. The transmitter is able to output 0dBm of power at the single-ended output to a monopole 50-Ohm antenna to meet the demands of...", "pdfSize": "1910KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Low+power+OOK+transmitter+for+wireless+capsule+endoscope&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref2"}, {"order": "3", "text": "F. Zhao, X. Gao, H. Zhang, K. Hu, Z. Hong, \"A CMOS 434/868 MHz FSK/OOK transmitter with integrated fractional-n PLL\", <em>Wireless and Microwave Technology Conference 2009. WAMICON '09. IEEE 10th Annual</em>, pp. 1-4, 2009.", "title": "A CMOS 434/868 MHz FSK/OOK transmitter with integrated fractional-n PLL", "context": [{"sec": "sec1", "text": " Although simple, OOK allows transmission of digital signals with relative ease thus it has become a popular choice for biomedical applications [1]\u2013[3].", "part": "1"}], "links": {"documentLink": "/document/5207310", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=5207310", "abstract": "A 434/868 MHz FSK/OOK transmitter with integrated PLL is reported. Direct digital modulation of a fully integrated \u00bf-\u00bf fractional-N PLL frequency synthesizer is used to ensure fine frequency resolution and low phase noise. A wideband VCO together with an adaptive frequency calibration (AFC) is used to cover the desired bands. A differential-to-single output programmable power amplifier is integrated to make the chip low cost and low power. The measurement results show that the phase noise are -7...", "pdfSize": "7KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=A+CMOS+434%2F868+MHz+FSK%2FOOK+transmitter+with+integrated+fractional-n+PLL&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref3"}, {"order": "4", "text": "K. W. Moulding, G. A. Wilson, \"A fully integrated 5 gyrator filter at video frequencies\", <em>Solid State Circuits Conference ESSCIRC '77. 3rd European</em>, pp. 148-151, 1977.", "title": "A fully integrated 5 gyrator filter at video frequencies", "context": [{"sec": "sec2a", "text": "Moulding [4] observed that in gyrator based resonators, transconductance amplifiers generate additional negative conductance at high frequencies, due to a finite resistive losses and a parasitic capacitances of transistors and biasing networks.", "part": "1"}], "links": {"documentLink": "/document/5435093", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=5435093", "abstract": "A single chip silicon integrated circuit filter is described comprising 5 gyrator resonators operating in the range 4 - 6 MHz. The complete filter is tuned by a single bias potential applied to the pn junction capacitors on the chip.", "pdfSize": "885KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=A+fully+integrated+5+gyrator+filter+at+video+frequencies&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref4"}, {"order": "5", "text": "Y. T. Wang, A. A. Abidi, \"CMOS active filter design at very high frequencies\", <em>IEEE Journal of Solid-State Circuits</em>, vol. 25, no. 6, pp. 1562-1574, Dec. 1990.", "title": "CMOS active filter design at very high frequencies", "context": [{"sec": "sec2a", "text": " If not sufficiently suppressed, the effect of these parasitic phase shifters causes resonator peaking or instability [5].", "part": "1"}], "links": {"documentLink": "/document/62193", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=62193", "abstract": "A study of the limitations of active CMOS filters at high frequencies suggests automatic means to compensate imperfections in the filter response introduced by active devices. The effects of nonzero FET output conductance, limited frequency response and noise on the filter characteristics, and dynamic range are analyzed, particularly for filters with high Q components. These are used to demonstrate a 3- mu m CMOS realization of a fourth-order bandpass filter with a 250-kHz passband centered at 1...", "pdfSize": "1207KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=CMOS+active+filter+design+at+very+high+frequencies&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref5"}, {"order": "6", "text": "B. Razavi, \"RF Microelectronics\" in Upper Saddle River, NJ, USA:Prentice-Hall, Inc., 1998.", "title": "RF Microelectronics", "context": [{"sec": "sec2b", "text": "In general, the criteria for oscillation of any negative resistance oscillator are divided into amplitude and phase conditions, as in the case of Barkhausen criteria for feedback oscillators [6].", "part": "1"}, {"sec": "sec2d", "text": "Phase noise of self-oscillating active inductor can be modeled using LTI (linear time invariant) method used previously by Razavi [6] for ring oscillators and Cranickx [7] for standard gyrator resonators.", "part": "1"}, {"sec": "sec2d", "text": " In LTI approach these transfer functions are linearised around the carrier frequency using Taylor series [6].", "part": "1"}], "googleScholarLink": "https://scholar.google.com/scholar?as_q=RF+Microelectronics&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref6"}, {"order": "7", "text": "J. Craninckx, M. Steyaert, \"Low-noise voltage-controlled oscillators using enhanced LC-tanks\", <em>IEEE Transactions on Circuits and Systems II: Analog and Digital Signal Processing</em>, vol. 42, no. 12, pp. 794-804, Dec. 1995.", "title": "Low-noise voltage-controlled oscillators using enhanced LC-tanks", "context": [{"sec": "sec2d", "text": "Phase noise of self-oscillating active inductor can be modeled using LTI (linear time invariant) method used previously by Razavi [6] for ring oscillators and Cranickx [7] for standard gyrator resonators.", "part": "1"}], "links": {"documentLink": "/document/476177", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=476177", "abstract": "Frequency synthesizers used in modern telecommunication systems, such as cellular telephones, need to have very low phase noise. Therefore, in the design of high performance frequency synthesizers using Phase Locked Loops (PLL), the Voltage-Controlled Oscillator (VCO) has become a key issue. The trend towards monolithic Integration poses some major challenges. This paper discusses the phase noise aspects of LC-tuned oscillators. A general formula is developed, based on the concepts of effective ...", "pdfSize": "1045KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Low-noise+voltage-controlled+oscillators+using+enhanced+LC-tanks&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref7"}, {"order": "8", "text": "T. H. Lee, A. Hajimiri, \"Oscillator phase noise: a tutorial\" in Solid-State Circuits IEEE Journal of, San Diego, CA, vol. 35, no. 3, pp. 326-336, 2000.", "title": "Oscillator phase noise: a tutorial", "context": [{"sec": "sec2d", "text": " Although less accurate than LTV (linear time variant) method of Hajimiri and Lee [8], it allows for a much quicker estimation of phase noise performance of the presented oscillator.", "part": "1"}], "links": {"documentLink": "/document/826814", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=826814", "abstract": "Linear time-invariant (LTI) phase noise theories provide important qualitative design insights but are limited in their quantitative predictive power. Part of the difficulty is that device noise undergoes multiple frequency translations to become oscillator phase noise. A quantitative understanding of this process requires abandoning the principle of time invariance assumed in most older theories of phase noise. Fortunately, the noise-to-phase transfer function of oscillators is still linear, de...", "pdfSize": "201KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Oscillator+phase+noise%3A+a+tutorial&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref8"}, {"order": "9", "text": "F. Gardner, Phaselock techniques, New York:John Wiley & Sons, 1979.", "title": "Phaselock techniques", "context": [{"sec": "sec2d", "text": " The phase noise is then calculated using the formula for a normalised theoretical one-sided spectrum of oscillator signal [9]\n\n\nFig. 3.", "part": "1"}], "googleScholarLink": "https://scholar.google.com/scholar?as_q=Phaselock+techniques&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref9"}, {"order": "10", "text": "G. Szczepkowski, R. Farrell, \"Noise and dynamic range of CMOS degenerated active inductor resonators\", <em>Circuit Theory and Design 2009. ECCTD 2009. European Conference on</em>, pp. 595-598, Aug. 2009.", "title": "Noise and dynamic range of CMOS degenerated active inductor resonators", "context": [{"sec": "sec2d", "text": "This methodology combined with the results of detailed noise analysis from our previous work [10] and model parameters from (1), the output noise PSD of a degenerated active inductor oscillator, at frequencies \\$\\omega_{m}\\ll\\omega_{0}\\$ is given by where \\$k\\$ is Boltzmann's constant, \\$T\\$ is temperature in Kelvins, \\$\\gamma\\$ is a process dependent noise constant.", "part": "1"}], "links": {"documentLink": "/document/5275052", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=5275052", "abstract": "This paper presents a compensation method of active inductor losses, employing passive gyrator degeneration rather than an external negative impedance converter. Theoretical analysis is confirmed by a comparative simulations of two resonators designed for 434 MHz band, using Eldo RF and Spectre and the UMC 0.18 mum 1P6M process. Presented results show that the proposed loss compensation method achieves comparable noise and large signal performance to a standard active inductor resonator and prov...", "pdfSize": "340KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Noise+and+dynamic+range+of+CMOS+degenerated+active+inductor+resonators&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref10"}], "pdfLink": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5595213", "articleId": "5595213", "startPage": "213", "endPage": "216", "pubLink": "https://ieeexplore.ieee.org/xpl/conhome/5592967/proceeding", "issueLink": "https://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=5595140", "publisher": "IEEE", "confLoc": "Gliwice, Poland", "chronDate": "7-10 Sept. 2010", "metrics": {"citationCountPaper": 0, "citationCountPatent": 0, "totalDownloads": 248}}
{"title": "Building domain specific software architectures from software architectural design patterns", "authors": [{"name": "Julie Street Fant", "affiliation": "George Mason University, Fairfax, VA, USA", "firstName": "Julie Street", "lastName": "Fant", "id": "37893671000"}], "abstract": "Software design patterns are best practice solutions to common software problems. However, applying design patterns in practice can be difficult since design pattern descriptions are general and can be applied at multiple levels of abstraction. In order to address the aforementioned issue, this research focuses on creating a systematic approach to designing domain specific distributed, real-time and embedded (DRE) software from software architectural design patterns. To address variability across a DRE domain, software product line concepts are used to categorize and organize the features and design patterns. The software architectures produced are also validated through design time simulation. This research is applied and validated using the space flight software (FSW) domain.", "keywords": [{"type": "IEEE Keywords", "kwd": ["Software architecture", "Unified modeling language", "Space vehicles", "Kernel", "Computer architecture", "Real time systems"]}, {"type": "INSPEC: Controlled Indexing", "kwd": ["object-oriented programming", "software architecture"]}, {"type": "INSPEC: Non-Controlled Indexing", "kwd": ["domain specific software architecture", "software architectural design pattern", "distributed software", "real-time software", "embedded software", "DRE software", "software product line concept", "design time simulation", "space flight software", "FSW domain"]}, {"type": "Author Keywords ", "kwd": ["design patterns", "distributed real-timeand embedded software", "software architectures", "space flight software", "uml"]}], "publication": "2011 33rd International Conference on Software Engineering (ICSE)", "doi": "10.1145/1985793.1986026", "ref": [{"order": "1", "text": "M. Hecht, D. Buettner, \"Software Testing in Space Programs\", <em>Crosslink</em>, vol. 6, no. 3, 2005.", "title": "Software Testing in Space Programs", "context": [{"sec": "sec1", "text": " In fact, \u201cin the period between 1998 and 2000 nearly half of all observed spacecraft anomalies were related to software\u201d [1].", "part": "1"}], "googleScholarLink": "https://scholar.google.com/scholar?as_q=Software+Testing+in+Space+Programs&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref1"}, {"order": "2", "text": "D. Dvorak, <em>NASA Study on Flight Software Complexity</em>, 2009.", "title": "NASA Study on Flight Software Complexity", "context": [{"sec": "sec1", "text": " Additionally, this research aligns with an industrial recommendation from the National Aeronautics and Space Administration (NASA) to help improve FSW acquisitions with early analysis and architecting of FSW [2].", "part": "1"}], "googleScholarLink": "https://scholar.google.com/scholar?as_q=NASA+Study+on+Flight+Software+Complexity&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref2"}, {"order": "3", "text": "F. Buschmann, K. Henney, D. C. Schmidt, \"Pattern Oriented Software Architecture\" in Patterns and Pattern Languages, Hoboken, NJ:John Wiley & Sons, LTD, vol. 5, 2007.", "title": "Pattern Oriented Software Architecture", "context": [{"sec": "sec2", "text": " There are many notable approaches for building software architectures from design patterns [3]\u2013[7] and more specifically real-time systems [8]\u2013[11].", "part": "1"}], "googleScholarLink": "https://scholar.google.com/scholar?as_q=Pattern+Oriented+Software+Architecture&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref3"}, {"order": "4", "text": "F. Buschmann, R. Meunier, H. Rohnert, P. Sommerlad, M. Stal, \"Pattern-Oriented Software Architecture\" in A System of Patterns, Hoboken, NJ:John Wiley & Sons, LTD, vol. 1, 1996.", "title": "Pattern-Oriented Software Architecture", "context": [{"sec": "sec2", "text": " There are many notable approaches for building software architectures from design patterns [3]\u2013[4][7] and more specifically real-time systems [8]\u2013[11].", "part": "1"}], "googleScholarLink": "https://scholar.google.com/scholar?as_q=Pattern-Oriented+Software+Architecture&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref4"}, {"order": "5", "text": "D. Schmidt, M. Stal, H. Rohnert, F. Buschmann, \"Pattern-Oriented Software Architecture\" in Patterns for Concurrent and Networked Objects, Hoboken, NJ:John Wiley & Sons, LTD, vol. 2, 2000.", "title": "Pattern-Oriented Software Architecture", "context": [{"sec": "sec2", "text": " There are many notable approaches for building software architectures from design patterns [3]\u2013[5][7] and more specifically real-time systems [8]\u2013[11].", "part": "1"}], "googleScholarLink": "https://scholar.google.com/scholar?as_q=Pattern-Oriented+Software+Architecture&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref5"}, {"order": "6", "text": "M. Kircher, P. Jain, \"Pattern-Oriented Software Architecture\" in Patterns for Resource Management, Hoboken, NJ:John Wiley & Sons, LTD, vol. 3, 2004.", "title": "Pattern-Oriented Software Architecture", "context": [{"sec": "sec2", "text": " There are many notable approaches for building software architectures from design patterns [3]\u2013[6][7] and more specifically real-time systems [8]\u2013[11].", "part": "1"}], "googleScholarLink": "https://scholar.google.com/scholar?as_q=Pattern-Oriented+Software+Architecture&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref6"}, {"order": "7", "text": "H. Gomaa, Designing Software Product Lines with UML: From Use Cases to Pattern-Based Software Architectures, Addison-Wesley, 2005.", "title": "Designing Software Product Lines with UML: From Use Cases to Pattern-Based Software Architectures", "context": [{"sec": "sec2", "text": " There are many notable approaches for building software architectures from design patterns [3]\u2013[7] and more specifically real-time systems [8]\u2013[11].", "part": "1"}, {"sec": "sec3", "text": " A software product line (SPL) feature model [7] is used to identify the variability and interrelationships among the features.", "part": "1"}, {"sec": "sec3", "text": " Traditional SPLs sometimes utilize a feature to class mapping that aids the engineer in selecting the specific classes required for a SPL member [7].", "part": "1"}], "googleScholarLink": "https://scholar.google.com/scholar?as_q=Designing+Software+Product+Lines+with+UML%3A+From+Use+Cases+to+Pattern-Based+Software+Architectures&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref7"}, {"order": "8", "text": "B. Douglass, Real-Time Design Patterns, Addison-Wesley, 2003.", "title": "Real-Time Design Patterns", "context": [{"sec": "sec2", "text": " There are many notable approaches for building software architectures from design patterns [3]\u2013[7] and more specifically real-time systems [8]\u2013[11].", "part": "1"}], "googleScholarLink": "https://scholar.google.com/scholar?as_q=Real-Time+Design+Patterns&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref8"}, {"order": "9", "text": "B. Selic, \"Architectural Patterns for Real-Time Systems: Using UML as an Architectural Description Language\" in UMLfor Real, Springer, pp. 171-188, 2004.", "title": "Architectural Patterns for Real-Time Systems: Using UML as an Architectural Description Language", "context": [{"sec": "sec2", "text": " There are many notable approaches for building software architectures from design patterns [3]\u2013[7] and more specifically real-time systems [8]\u2013[9][11].", "part": "1"}], "links": {"crossRefLink": "https://doi.org/10.1007/0-306-48738-1_8", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Architectural+Patterns+for+Real-Time+Systems%3A+Using+UML+as+an+Architectural+Description+Language&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref9"}, {"order": "10", "text": "J. Zalewski, \"Real-Time Software Architectures and Design Patterns: Fundamental Concepts and Their Consequences\", <em>Annual Reviews in Control</em>, vol. 25, 2001.", "title": "Real-Time Software Architectures and Design Patterns: Fundamental Concepts and Their Consequences", "context": [{"sec": "sec2", "text": " There are many notable approaches for building software architectures from design patterns [3]\u2013[7] and more specifically real-time systems [8]\u2013[10][11].", "part": "1"}], "links": {"crossRefLink": "https://doi.org/10.1016/S1367-5788(01)80001-8", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Real-Time+Software+Architectures+and+Design+Patterns%3A+Fundamental+Concepts+and+Their+Consequences&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref10"}, {"order": "11", "text": "I. Fliege, A. Geraldy, R. Gotzhein, T. Kuhn, C. Webel, \"Developing safety-critical real-time systems with SDL design patterns and components\", <em>Computer Networks</em>, vol. 49, 2005.", "title": "Developing safety-critical real-time systems with SDL design patterns and components", "context": [{"sec": "sec2", "text": " There are many notable approaches for building software architectures from design patterns [3]\u2013[7] and more specifically real-time systems [8]\u2013[11].", "part": "1"}], "links": {"crossRefLink": "https://doi.org/10.1016/j.comnet.2005.05.003", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Developing+safety-critical+real-time+systems+with+SDL+design+patterns+and+components&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref11"}, {"order": "12", "text": "J. Noble, \"Classifying Relationships Between Object-Oriented Design Patterns\", <em>Australian Software Engineering Conference</em>, 1998.", "title": "Classifying Relationships Between Object-Oriented Design Patterns", "context": [{"sec": "sec2", "text": " Other researchers are developing approaches to help aid practitioners in design pattern selection [12]\u2013[15].", "part": "1"}], "links": {"documentLink": "/document/730917", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=730917", "abstract": "Since the publication of the Design Patterns book (E. Gamma et al., 1994), a large number of object-oriented design patterns have been identified and codified. As part of the pattern form, object-oriented design patterns must indicate their relationships with other patterns, but these relationships are typically described very briefly, and different collections of patterns describe different relationships in different ways. In this paper, we describe and classify the common relationships between...", "pdfSize": "72KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Classifying+Relationships+Between+Object-Oriented+Design+Patterns&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref12"}, {"order": "13", "text": "B. Schulz, T. Genbler, B. Mohr, W. Zimmer, \"On the Computer Aided Introduction of Design Patterns into Object-Oriented Systems\", <em>Technology of Object-Oriented Languages and Systems (TOOLS)</em>, 1998.", "title": "On the Computer Aided Introduction of Design Patterns into Object-Oriented Systems", "context": [{"sec": "sec2", "text": " Other researchers are developing approaches to help aid practitioners in design pattern selection [12]\u2013[13][15].", "part": "1"}], "links": {"documentLink": "/document/713608", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=713608", "abstract": "The authors present a new approach to the reorganization of object-oriented systems using design patterns. Instead of looking at design patterns as building blocks, they consider them to be operators, whose application transforms an existing design into an improved target design. For this purpose, an algorithmic process of design pattern application is presented. Furthermore they show that design pattern operators can be implemented in terms of refactorings in a behavior preserving way. Afterwar...", "pdfSize": "198KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=On+the+Computer+Aided+Introduction+of+Design+Patterns+into+Object-Oriented+Systems&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref13"}, {"order": "14", "text": "L. C. Briand, Y. Labiche, A. Sauve, \"Guiding the Application of Design Patterns Based on UML Models\", <em>22nd IEEE International Conference on Software Maintenance (ICSM'06)</em>, 2006.", "title": "Guiding the Application of Design Patterns Based on UML Models", "context": [{"sec": "sec2", "text": " Other researchers are developing approaches to help aid practitioners in design pattern selection [12]\u2013[14][15].", "part": "1"}], "links": {"abstract": "Software design patterns are documented best practice solutions that can be applied to recurring problems. Although well documented, there are often opportunities to apply them which are overlooked by software designers. This can be the result of inexperience, the sheer complexity of the system, or the fact that design patterns do not always constitute intuitive designs. In this paper, we present a structured methodology for semi-automating the detection of areas within a UML design of a softwar...", "pdfSize": "306KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Guiding+the+Application+of+Design+Patterns+Based+on+UML+Models&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref14"}, {"order": "15", "text": "K. Meffert, \"Supporting Design Patterns with Annotations\", <em>13th Annual IEEE International Symposium and Workshop on Engineering of Computer Based Systems (ECBS'06)</em>, 2006.", "title": "Supporting Design Patterns with Annotations", "context": [{"sec": "sec2", "text": " Other researchers are developing approaches to help aid practitioners in design pattern selection [12]\u2013[15].", "part": "1"}], "links": {"abstract": "Design patterns are an established means for building evolvable and maintainable object-oriented software. However, using them requires the developer&#39;s extensive experience. A wrongly selected design pattern may cause more harm than the right pattern would do good. A single developer is not able to totally know all to date documented patterns, or even identify the best pattern for his current design problem. This paper presents an approach aiding the developer in selecting the right pattern for ...", "pdfSize": "249KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Supporting+Design+Patterns+with+Annotations&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref15"}, {"order": "16", "text": "A. Oluyomi, S. Karunasekera, L. Sterling, \"An Agent Design Pattern Classification Scheme: Capturing the Notions of Agency in Agent Design Patterns\", <em>11th Asia-Pacific Software Engineering Conference (APSEC'04)</em>, 2004.", "title": "An Agent Design Pattern Classification Scheme: Capturing the Notions of Agency in Agent Design Patterns", "context": [{"sec": "sec2", "text": " Finally, other research focuses on increasing design pattern application using new teaching methods [16]\u2013[20].", "part": "1"}], "links": {"documentLink": "/document/1371949", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=1371949", "abstract": "Agent technology is increasingly being used to develop software systems in different domains. Hence particular design problems are recurring in different multiagent systems development projects. In order to enhance the reuse of proven solutions to recurring design problems, agent design patterns are being identified and documented. Understandably, most of the available work on agent design patterns reflect object oriented concepts (classes, objects, inheritance, etc) and exhibit an implementatio...", "pdfSize": "194KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=An+Agent+Design+Pattern+Classification+Scheme%3A+Capturing+the+Notions+of+Agency+in+Agent+Design+Patterns&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref16"}, {"order": "17", "text": "K. S. Y. AI-Tahat, A. N. Al-ahmad, N. B. Kallajo, W. B. Al-Jayyousi, \"A Design Pattern Management Tool for Educational Purposes\", <em>The 2nd Information and Communication Technologies (ICTTA)</em>, 2006.", "title": "A Design Pattern Management Tool for Educational Purposes", "context": [{"sec": "sec2", "text": " Finally, other research focuses on increasing design pattern application using new teaching methods [16]\u2013[17][20].", "part": "1"}], "googleScholarLink": "https://scholar.google.com/scholar?as_q=A+Design+Pattern+Management+Tool+for+Educational+Purposes&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref17"}, {"order": "18", "text": "C. Alphonce, M. Caspersen, A. Decker, \"Killer \u201cKiller Examples\u201d for Design Patterns\", <em>SIGCSE'07</em>, 2007.", "title": "Killer \u201cKiller Examples\u201d for Design Patterns", "context": [{"sec": "sec2", "text": " Finally, other research focuses on increasing design pattern application using new teaching methods [16]\u2013[18][20].", "part": "1"}], "links": {"acmLink": "https://doi.org/10.1145/1227310.1227390", "abstract": "Giving students an appreciation of the benefits of using design patterns and an ability to use them effectively in developing code presents several interesting pedagogical challenges. This paper discusses pedagogical lessons learned at the &#34;Killer Examples&#34; for Design Patterns and Objects First series of workshops held at the Object Oriented Programming, Systems, Languages and Applications (OOPSLA) conference over the past four years. It also showcases three &#34;killer examples&#34; which can be used t...", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Killer+%E2%80%9CKiller+Examples%E2%80%9D+for+Design+Patterns&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref18"}, {"order": "19", "text": "P. V. Gestwicki, \"Computer Games as Motivation for Design Patterns\", <em>SIGCSE'07</em>, 2007.", "title": "Computer Games as Motivation for Design Patterns", "context": [{"sec": "sec2", "text": " Finally, other research focuses on increasing design pattern application using new teaching methods [16]\u2013[19][20].", "part": "1"}], "links": {"acmLink": "https://doi.org/10.1145/1227310.1227391", "abstract": "We present a computer game case study that can be used to motivate the need for design patterns. Design patterns are often misunderstood, but good examples can motivate students to work at understanding patterns. Computer games are used in many books and online resources to teach programming concepts, but these examples are usually simplified or non-object-oriented. We present a simple game that exhibits functionality found in commercial games (animation, collision detection, etc.) and show how ...", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Computer+Games+as+Motivation+for+Design+Patterns&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref19"}, {"order": "20", "text": "D. R. Wright, \"The Decision Pattern: Capturing and Communicating Design Intent\", <em>SIGDOC'07</em>, 2007.", "title": "The Decision Pattern: Capturing and Communicating Design Intent", "context": [{"sec": "sec2", "text": " Finally, other research focuses on increasing design pattern application using new teaching methods [16]\u2013[20].", "part": "1"}], "links": {"acmLink": "https://doi.org/10.1145/1297144.1297160", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=The+Decision+Pattern%3A+Capturing+and+Communicating+Design+Intent&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref20"}, {"order": "21", "text": "J. Fant, H. Gomaa, R. Pettit IV, \"Architectural Design Patterns for Flight Software\", <em>2nd IEEE Workshop on Model-based Engineering for Real-Time Embedded Systems</em>, 2011.", "title": "Architectural Design Patterns for Flight Software", "context": [{"sec": "sec4", "text": " The process for deriving these executable templates for the FSW domain is described in more detail in [21].", "part": "1"}], "links": {"abstract": "Software design patterns are best practice solutions to common software design problems. When they are properly applied, software design patterns can greatly improve the quality of software architectures. However, applying design patterns in practice can be difficult since design pattern descriptions are domain and platform independent. Leveraging the benefits of design patterns is particularly important in the space flight software (FSW) domain because better designs are needed to help reduce t...", "pdfSize": "411KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Architectural+Design+Patterns+for+Flight+Software&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref21"}, {"order": "22", "text": "D. Harel, \"Executable object modeling with statecharts\", <em>18th International Conference on Software Engineering</em>, 1997.", "title": "Executable object modeling with statecharts", "context": [{"sec": "sec3", "text": " The state machines are executed using executable statecharts semantics [22].", "part": "1"}], "links": {"abstract": "This paper reports on an effort to develop an integrated set of diagrammatic languages for modeling object-oriented systems, and to construct a supporting tool. The goal is for models to be intuitive and well-structured, yet fully executable and analyzable, enabling automatic synthesis of usable and efficient code in object-oriented languages such as C++. At the heart of the modeling method is the language of statecharts for specifying object behavior, and a hierarchical OMT-like language for de...", "pdfSize": "1399KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Executable+object+modeling+with+statecharts&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref22"}], "pdfLink": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6032618", "articleId": "6032618", "startPage": "1152", "endPage": "1154", "pubLink": "https://ieeexplore.ieee.org/xpl/conhome/6032121/proceeding", "issueLink": "https://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=6032438", "publisher": "IEEE", "confLoc": "Honolulu, HI, USA", "chronDate": "21-28 May 2011", "metrics": {"citationCountPaper": 5, "citationCountPatent": 0, "totalDownloads": 692}}
{"title": "Automated cross-platform inconsistency detection for mobile apps", "authors": [{"name": "Mattia Fazzini", "affiliation": "Georgia Institute of Technology, USA", "firstName": "Mattia", "lastName": "Fazzini", "id": "37085571810"}, {"name": "Alessandro Orso", "affiliation": "Georgia Institute of Technology, USA", "firstName": "Alessandro", "lastName": "Orso", "id": "37267738200"}], "abstract": "Testing of Android apps is particularly challenging due to the fragmentation of the Android ecosystem in terms of both devices and operating system versions. Developers must in fact ensure not only that their apps behave as expected, but also that the apps' behavior is consistent across platforms. To support this task, we propose DiffDroid, a new technique that helps developers automatically find cross-platform inconsistencies (CPIs) in mobile apps. DiffDroid combines input generation and differential testing to compare the behavior of an app on different platforms and identify possible inconsistencies. Given an app, DiffDroid (1) generates test inputs for the app, (2) runs the app with these inputs on a reference device and builds a model of the app behavior, (3) runs the app with the same inputs on a set of other devices, and (4) compares the behavior of the app on these different devices with the model of its behavior on the reference device. We implemented DiFFDRoiD and performed an evaluation of our approach on 5 benchmarks and over 130 platforms. our results show that DiFFDRoiD can identify CPis on real apps efficiently and with a limited number of false positives. DiFFDRoiD and our experimental infrastructure are publicly available.", "keywords": [{"type": "IEEE Keywords", "kwd": ["Testing", "Androids", "Humanoid robots", "Encoding", "Performance evaluation", "Analytical models"]}, {"type": "INSPEC: Controlled Indexing", "kwd": ["Android (operating system)", "mobile computing", "program testing"]}, {"type": "INSPEC: Non-Controlled Indexing", "kwd": ["mobile apps", "DiffDroid", "DiFFDRoiD", "automated cross-platform inconsistency detection", "Android apps", "cross-platform inconsistencies"]}], "publication": "2017 32nd IEEE/ACM International Conference on Automated Software Engineering (ASE)", "doi": "10.1109/ASE.2017.8115644", "ref": [{"order": "1", "text": "<em>Salesforce will only support Nexus and Samsung Galaxy phones to avoid Android fragmentation</em>.", "title": "Salesforce will only support Nexus and Samsung Galaxy phones to avoid Android fragmentation", "context": [{"sec": "sec1", "text": " Given the large number of possible hardware and software configurations in Android, this makes it extremely difficult and expensive to perform adequate testing of an app [1].", "part": "1"}], "googleScholarLink": "https://scholar.google.com/scholar?as_q=Salesforce+will+only+support+Nexus+and+Samsung+Galaxy+phones+to+avoid+Android+fragmentation&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref1"}, {"order": "2", "text": "M. E. Joorabchi, A. Mesbah, P. Kruchten, \"Real Challenges in Mobile app Development\", <em>2013 ACM/IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM)</em>, 2013.", "title": "Real Challenges in Mobile app Development", "context": [{"sec": "sec1", "text": "The problem of cross-platform inconsistencies (CPIs) is therefore prevalent in the Android environment, where users can observe failures and unexpected behaviors that are caused by differences between their platform and those on which the app they are using was tested [2].", "part": "1"}, {"sec": "sec7", "text": "The fragmentation of the Android ecosystem has been studied in the literature [30], [31], [2]\u2013[36].", "part": "1"}], "links": {"abstract": "Context: Mobile app development is a relatively new phenomenon that is increasing rapidly due to the ubiquity and popularity of smartphones among end-users. Objective: The goal of our study is to gain an understanding of the main challenges developers face in practice when they build apps for different mobile devices. Method: We conducted a qualitative study, following a Grounded Theory approach, in which we interviewed 12 senior mobile developers from 9 different companies, followed by a semi-s...", "pdfSize": "319KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Real+Challenges+in+Mobile+app+Development&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref2"}, {"order": "3", "text": "<em>Daily Dozen</em>.", "title": "Daily Dozen", "context": [{"sec": "sec2", "text": "To motivate our work we provide an example from a realworld app called Daily Dozen [3]-a diet tracking app that has been downloaded more than 50, 000 times and reviewed by more than 1, 000 users.", "part": "1"}, {"sec": "sec7", "text": "The fragmentation of the Android ecosystem has been studied in the literature [30], [31], [2]\u2013[3][36].", "part": "1"}], "googleScholarLink": "https://scholar.google.com/scholar?as_q=Daily+Dozen&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref3"}, {"order": "4", "text": "<em>UI Overview</em>.", "title": "UI Overview", "context": [{"sec": "sec3", "text": " Before providing the generated inputs to the app, the technique captures the UI state of the app by storing the tree of its UI hierarchy [4] and taking a screenshot of its appearance on the device.", "part": "1"}, {"sec": "sec7", "text": "The fragmentation of the Android ecosystem has been studied in the literature [30], [31], [2]\u2013[4][36].", "part": "1"}], "googleScholarLink": "https://scholar.google.com/scholar?as_q=UI+Overview&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref4"}, {"order": "5", "text": "<em>Monkey</em>.", "title": "Monkey", "context": [{"sec": "sec3a", "text": " Diffdroid generates three types of inputs (KEY, System, and Touch) using a weighted random distribution, as done in related work [5]. (It is worth noting that the technique would also work with a different dynamic input generation approach, such as [6]\u2013[13].) Key inputs are characterized by the value of the key they are representing; system inputs express a change in the orientation of the device or data used to transfer control between components of the AUT; and touch inputs represent clicks or gestures on the device.", "part": "1"}, {"sec": "sec4", "text": "DIFFDROID's input generation module is built on top of Monkey [5], an input generator for Android apps that generates pseudo-random sequences of user and system events.", "part": "1"}, {"sec": "sec7", "text": "The fragmentation of the Android ecosystem has been studied in the literature [30], [31], [2]\u2013[5][36].", "part": "1"}], "googleScholarLink": "https://scholar.google.com/scholar?as_q=Monkey&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref5"}, {"order": "6", "text": "A. Machiry, R. Tahiliani, M. Naik, \"Dynodroid: An Input Generation System for Android Apps\", <em>Proceedings of the 2013 Joint Meeting on Foundations of Software Engineering</em>, 2013.", "title": "Dynodroid: An Input Generation System for Android Apps", "context": [{"sec": "sec3a", "text": " Diffdroid generates three types of inputs (KEY, System, and Touch) using a weighted random distribution, as done in related work [5]. (It is worth noting that the technique would also work with a different dynamic input generation approach, such as [6]\u2013[13].) Key inputs are characterized by the value of the key they are representing; system inputs express a change in the orientation of the device or data used to transfer control between components of the AUT; and touch inputs represent clicks or gestures on the device.", "part": "1"}, {"sec": "sec7", "text": "The fragmentation of the Android ecosystem has been studied in the literature [30], [31], [2]\u2013[6][36].", "part": "1"}], "links": {"acmLink": "https://doi.org/10.1145/2491411.2491450", "abstract": "We present a system Dynodroid for generating relevant inputs to unmodified Android apps. Dynodroid views an app as an event-driven program that interacts with its environment by means of a sequence of events through the Android framework. By instrumenting the framework once and for all, Dynodroid monitors the reaction of an app upon each event in a lightweight manner, using it to guide the generation of the next event to the app. Dynodroid also allows interleaving events from machines, which are...", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Dynodroid%3A+An+Input+Generation+System+for+Android+Apps&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref6"}, {"order": "7", "text": "D. Amalfitano, A. R. Fasolino, P. Tramontana, S. De Carmine, A. M. Memon, \"Using GUI Ripping for Automated Testing of Android Applications\", <em>Proceedings of the IEEE/ACM International Conference on Automated Software Engineering</em>, 2012.", "title": "Using GUI Ripping for Automated Testing of Android Applications", "context": [{"sec": "sec3a", "text": " Diffdroid generates three types of inputs (KEY, System, and Touch) using a weighted random distribution, as done in related work [5]. (It is worth noting that the technique would also work with a different dynamic input generation approach, such as [6]\u2013[7][13].) Key inputs are characterized by the value of the key they are representing; system inputs express a change in the orientation of the device or data used to transfer control between components of the AUT; and touch inputs represent clicks or gestures on the device.", "part": "1"}, {"sec": "sec7", "text": "The fragmentation of the Android ecosystem has been studied in the literature [30], [31], [2]\u2013[7][36].", "part": "1"}], "links": {"acmLink": "https://doi.org/10.1145/2351676.2351717", "abstract": "We present AndroidRipper, an automated technique that tests Android apps via their Graphical User Interface (GUI). AndroidRipper is based on a user-interface driven ripper that automatically explores the app&#39;s GUI with the aim of exercising the application in a structured manner. We evaluate AndroidRipper on an open-source Android app. Our results show that our GUI-based test cases are able to detect severe, previously unknown, faults in the underlying code, and the structured exploration outper...", "pdfSize": "474KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Using+GUI+Ripping+for+Automated+Testing+of+Android+Applications&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref7"}, {"order": "8", "text": "W. Yang, M. R. Prasad, T. Xie, \"A Grey-box Approach for Automated GUI-model Generation of Mobile Applications\", <em>Proceedings of the 16th International Conference on Fundamental Approaches to Software Engineering</em>, 2013.", "title": "A Grey-box Approach for Automated GUI-model Generation of Mobile Applications", "context": [{"sec": "sec3a", "text": " Diffdroid generates three types of inputs (KEY, System, and Touch) using a weighted random distribution, as done in related work [5]. (It is worth noting that the technique would also work with a different dynamic input generation approach, such as [6]\u2013[8][13].) Key inputs are characterized by the value of the key they are representing; system inputs express a change in the orientation of the device or data used to transfer control between components of the AUT; and touch inputs represent clicks or gestures on the device.", "part": "1"}, {"sec": "sec7", "text": "The fragmentation of the Android ecosystem has been studied in the literature [30], [31], [2]\u2013[8][36].", "part": "1"}], "googleScholarLink": "https://scholar.google.com/scholar?as_q=A+Grey-box+Approach+for+Automated+GUI-model+Generation+of+Mobile+Applications&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref8"}, {"order": "9", "text": "T. Azim, I. Neamtiu, \"Targeted and Depth-first Exploration for Systematic Testing of Android Apps\", <em>Proceedings of the 2013 ACM SIGPLAN International Conference on Object Oriented Programming Systems Languages and Applications</em>, 2013.", "title": "Targeted and Depth-first Exploration for Systematic Testing of Android Apps", "context": [{"sec": "sec3a", "text": " Diffdroid generates three types of inputs (KEY, System, and Touch) using a weighted random distribution, as done in related work [5]. (It is worth noting that the technique would also work with a different dynamic input generation approach, such as [6]\u2013[9][13].) Key inputs are characterized by the value of the key they are representing; system inputs express a change in the orientation of the device or data used to transfer control between components of the AUT; and touch inputs represent clicks or gestures on the device.", "part": "1"}, {"sec": "sec7", "text": "The fragmentation of the Android ecosystem has been studied in the literature [30], [31], [2]\u2013[9][36].", "part": "1"}], "links": {"acmLink": "https://doi.org/10.1145/2509136.2509549", "abstract": "Systematic exploration of Android apps is an enabler for a variety of app analysis and testing tasks. Performing the exploration while apps run on actual phones is essential for exploring the full range of app capabilities. However, exploring real-world apps on real phones is challenging due to non-determinism, non-standard control flow, scalability and overhead constraints. Relying on end-users to conduct the exploration might not be very effective: we performed a 7-use study on popular Android...", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Targeted+and+Depth-first+Exploration+for+Systematic+Testing+of+Android+Apps&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref9"}, {"order": "10", "text": "W. Choi, G. Necula, K. Sen, \"Guided GUI Testing of Android Apps with Minimal Restart and Approximate Learning\", <em>Proceedings of the 2013 ACM SIGPLAN International Conference on Object Oriented Programming Systems Languages and Applications</em>, 2013.", "title": "Guided GUI Testing of Android Apps with Minimal Restart and Approximate Learning", "context": [{"sec": "sec3a", "text": " Diffdroid generates three types of inputs (KEY, System, and Touch) using a weighted random distribution, as done in related work [5]. (It is worth noting that the technique would also work with a different dynamic input generation approach, such as [6]\u2013[10][13].) Key inputs are characterized by the value of the key they are representing; system inputs express a change in the orientation of the device or data used to transfer control between components of the AUT; and touch inputs represent clicks or gestures on the device.", "part": "1"}, {"sec": "sec7", "text": "The fragmentation of the Android ecosystem has been studied in the literature [30], [31], [2]\u2013[10][36].", "part": "1"}], "googleScholarLink": "https://scholar.google.com/scholar?as_q=Guided+GUI+Testing+of+Android+Apps+with+Minimal+Restart+and+Approximate+Learning&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref10"}, {"order": "11", "text": "S. Hao, B. Liu, S. Nath, W. G. Halfond, R. Govindan, \"PUMA: Programmable UI-automation for Large-scale Dynamic Analysis of Mobile Apps\", <em>Proceedings of the 12th Annual International Conference on Mobile Systems Applications and Services</em>, 2014.", "title": "PUMA: Programmable UI-automation for Large-scale Dynamic Analysis of Mobile Apps", "context": [{"sec": "sec3a", "text": " Diffdroid generates three types of inputs (KEY, System, and Touch) using a weighted random distribution, as done in related work [5]. (It is worth noting that the technique would also work with a different dynamic input generation approach, such as [6]\u2013[11][13].) Key inputs are characterized by the value of the key they are representing; system inputs express a change in the orientation of the device or data used to transfer control between components of the AUT; and touch inputs represent clicks or gestures on the device.", "part": "1"}, {"sec": "sec7", "text": "The fragmentation of the Android ecosystem has been studied in the literature [30], [31], [2]\u2013[11][36].", "part": "1"}], "links": {"acmLink": "https://doi.org/10.1145/2594368.2594390", "abstract": "Mobile app ecosystems have experienced tremendous growth in the last six years. This has triggered research on dynamic analysis of performance, security, and correctness properties of the mobile apps in the ecosystem. Exploration of app execution using automated UI actions has emerged as an important tool for this research. However, existing research has largely developed analysis-specific UI automation techniques, wherein the logic for exploring app execution is intertwined with the logic for a...", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=PUMA%3A+Programmable+UI-automation+for+Large-scale+Dynamic+Analysis+of+Mobile+Apps&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref11"}, {"order": "12", "text": "R. Mahmood, N. Mirzaei, S. Malek, \"EvoDroid: Segmented Evolutionary Testing of Android Apps\", <em>Proceedings of the 22nd ACM SIGSOFT International Symposium on Foundations of Software Engineering</em>, 2014.", "title": "EvoDroid: Segmented Evolutionary Testing of Android Apps", "context": [{"sec": "sec3a", "text": " Diffdroid generates three types of inputs (KEY, System, and Touch) using a weighted random distribution, as done in related work [5]. (It is worth noting that the technique would also work with a different dynamic input generation approach, such as [6]\u2013[12][13].) Key inputs are characterized by the value of the key they are representing; system inputs express a change in the orientation of the device or data used to transfer control between components of the AUT; and touch inputs represent clicks or gestures on the device.", "part": "1"}, {"sec": "sec7", "text": "The fragmentation of the Android ecosystem has been studied in the literature [30], [31], [2]\u2013[12][36].", "part": "1"}], "links": {"acmLink": "https://doi.org/10.1145/2635868.2635896", "abstract": "Proliferation of Android devices and apps has created a demand for applicable automated software testing techniques. Prior research has primarily focused on either unit or GUI testing of Android apps, but not their end-to-end system testing in a systematic manner. We present EvoDroid, an evolutionary approach for system testing of Android apps. EvoDroid overcomes a key shortcoming of using evolutionary techniques for system testing, i.e., the inability to pass on genetic makeup of good individua...", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=EvoDroid%3A+Segmented+Evolutionary+Testing+of+Android+Apps&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref12"}, {"order": "13", "text": "S. Anand, M. Naik, M. J. Harrold, H. Yang, \"Automated Concolic Testing of Smartphone Apps\", <em>Proceedings of the 20th ACM SIGSOFT International Symposium on the Foundations of Software Engineering</em>, 2012.", "title": "Automated Concolic Testing of Smartphone Apps", "context": [{"sec": "sec3a", "text": " Diffdroid generates three types of inputs (KEY, System, and Touch) using a weighted random distribution, as done in related work [5]. (It is worth noting that the technique would also work with a different dynamic input generation approach, such as [6]\u2013[13].) Key inputs are characterized by the value of the key they are representing; system inputs express a change in the orientation of the device or data used to transfer control between components of the AUT; and touch inputs represent clicks or gestures on the device.", "part": "1"}, {"sec": "sec7", "text": "The fragmentation of the Android ecosystem has been studied in the literature [30], [31], [2]\u2013[13][36].", "part": "1"}], "links": {"acmLink": "https://doi.org/10.1145/2393596.2393666", "abstract": "We present an algorithm and a system for generating input events to exercise smartphone apps. Our approach is based on concolic testing and generates sequences of events automatically and systematically. It alleviates the path-explosion problem by checking a condition on program executions that identifies subsumption between different event sequences. We also describe our implementation of the approach for Android, the most popular smartphone app platform, and the results of an evaluation that d...", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Automated+Concolic+Testing+of+Smartphone+Apps&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref13"}, {"order": "14", "text": "A. Zeller, R. Hildebrandt, \"Simplifying and Isolating Failure-Inducing Input\", <em>IEEE Transactions on Software Engineering</em>, 2002.", "title": "Simplifying and Isolating Failure-Inducing Input", "context": [{"sec": "sec3a", "text": " Note that our technique does not currently remove inputs that do not affect the state of the AUT, but they could be discarded using an approach based on delta debugging [14].", "part": "1"}, {"sec": "sec7", "text": "The fragmentation of the Android ecosystem has been studied in the literature [30], [31], [2]\u2013[14][36].", "part": "1"}], "links": {"documentLink": "/document/988498", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=988498", "abstract": "Given some test case, a program fails. Which circumstances of the test case are responsible for the particular failure? The delta debugging algorithm generalizes and simplifies the failing test case to a minimal test case that still produces the failure. It also isolates the difference between a passing and a failing test case. In a case study, the Mozilla Web browser crashed after 95 user actions. Our prototype implementation automatically simplified the input to three relevant user actions. Li...", "pdfSize": "673KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Simplifying+and+Isolating+Failure-Inducing+Input&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref14"}, {"order": "15", "text": "M. P. Sampat, Z. Wang, S. Gupta, A. C. Bovik, M. K. Markey, \"Complex wavelet structural similarity: A new image similarity index\", <em>IEEE transactions on image processing</em>, 2009.", "title": "Complex wavelet structural similarity: A new image similarity index", "context": [{"sec": "sec3b", "text": " Function Same-image compares two screenshots using the complex wavelet structural similarity (CW-SSIM) index [15], which can range between zero (different images) and one (similar images).", "part": "1"}, {"sec": "sec3d2", "text": " Our technique uses the Complex-Wavelet Structural Similarity (CW-SSIM) index [15] to compare the structural similarity of the content of two images.", "part": "1"}, {"sec": "sec7", "text": "The fragmentation of the Android ecosystem has been studied in the literature [30], [31], [2]\u2013[15][36].", "part": "1"}], "links": {"documentLink": "/document/5109651", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=5109651", "abstract": "We introduce a new measure of image similarity called the complex wavelet structural similarity (CW-SSIM) index and show its applicability as a general purpose image similarity index. The key idea behind CW-SSIM is that certain image distortions lead to consistent phase changes in the local wavelet coefficients, and that a consistent phase shift of the coefficients does not change the structural content of the image. By conducting four case studies, we have demonstrated the superiority of the CW...", "pdfSize": "3119KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Complex+wavelet+structural+similarity%3A+A+new+image+similarity+index&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref15"}, {"order": "16", "text": "M. Fazzini, E. N. D. A. Freitas, S. Roy Choudhary, A. Orso, \"Barista: A Technique for Recording Encoding and Running Platform Independent Android Tests\", <em>Proceedings of the 2017 IEEE International Conference on Software Testing Verification and Validation</em>, 2017.", "title": "Barista: A Technique for Recording, Encoding, and Running Platform Independent Android Tests", "context": [{"sec": "sec3b", "text": " The algorithm creates platform-independent statements following the principles presented in our previous work [16].", "part": "1"}, {"sec": "sec7", "text": "The fragmentation of the Android ecosystem has been studied in the literature [30], [31], [2]\u2013[16][36].", "part": "1"}], "links": {"documentLink": "/document/7927971", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=7927971", "abstract": "Because mobile apps are extremely popular and often mission critical nowadays, companies invest a great deal of resources in testing the apps they provide to their customers. Testing is particularly important for Android apps, which must run on a multitude of devices and operating system versions. Unfortunately, as we confirmed in many interviews with quality assurance professionals, app testing is today a very human intensive, and therefore tedious and error prone, activity. To address this pro...", "pdfSize": "450KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Barista%3A+A+Technique+for+Recording%2C+Encoding%2C+and+Running+Platform+Independent+Android+Tests&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref16"}, {"order": "17", "text": "J. R. Quinlan, C4. 5: programs for machine learning, Elsevier, 2014.", "title": "C4. 5: programs for machine learning", "context": [{"sec": "sec3d2", "text": "Function Compute-image-Similarity in Algorithm 3 uses a decision tree classifier [17] to compute whether the visual representation of two nodes should be reported as a CPI.", "part": "1"}, {"sec": "sec7", "text": "The fragmentation of the Android ecosystem has been studied in the literature [30], [31], [2]\u2013[17][36].", "part": "1"}], "googleScholarLink": "https://scholar.google.com/scholar?as_q=C4.+5%3A+programs+for+machine+learning&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref17"}, {"order": "18", "text": "Y. Rubner, C. Tomasi, L. J. Guibas, \"The earth mover's distance as a metric for image retrieval\", <em>International journal of computer vision</em>, 2000.", "title": "The earth mover's distance as a metric for image retrieval", "context": [{"sec": "sec3d2", "text": " Diffdroid uses the Earth's Mover Distance [18] (EMD) of the color histograms of two images to compare the color composition of the images.", "part": "1"}, {"sec": "sec7", "text": "The fragmentation of the Android ecosystem has been studied in the literature [30], [31], [2]\u2013[18][36].", "part": "1"}], "links": {"crossRefLink": "https://doi.org/10.1023/A:1026543900054", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=The+earth+mover%27s+distance+as+a+metric+for+image+retrieval&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref18"}, {"order": "19", "text": "C. Patel, A. Patel, D. Patel, \"Optical character recognition by open source OCR tool tesseract: A case study\", <em>International Journal of Computer Applications</em>, 2012.", "title": "Optical character recognition by open source OCR tool tesseract: A case study", "context": [{"sec": "sec3d2", "text": " Diffdroid uses the output of optical character recognition [19] (OCR) to assess whether two images display the same text.", "part": "1"}, {"sec": "sec7", "text": "The fragmentation of the Android ecosystem has been studied in the literature [30], [31], [2]\u2013[19][36].", "part": "1"}], "links": {"crossRefLink": "https://doi.org/10.5120/8794-2784", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Optical+character+recognition+by+open+source+OCR+tool+tesseract%3A+A+case+study&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref19"}, {"order": "20", "text": "<em>UiAutomation</em>.", "title": "UiAutomation", "context": [{"sec": "sec4", "text": " The tool is able to inspect the screen content of the app using UiAutomation [20], which is a special accessibility service of the Android platform.", "part": "1"}, {"sec": "sec7", "text": "The fragmentation of the Android ecosystem has been studied in the literature [30], [31], [2]\u2013[20][36].", "part": "1"}], "googleScholarLink": "https://scholar.google.com/scholar?as_q=UiAutomation&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref20"}, {"order": "21", "text": "<em>JavaPoet</em>.", "title": "JavaPoet", "context": [{"sec": "sec4", "text": "The test case encoding module uses the Javapoet 1.8 library [21] to generate the source code of test cases.", "part": "1"}, {"sec": "sec7", "text": "The fragmentation of the Android ecosystem has been studied in the literature [30], [31], [2]\u2013[21][36].", "part": "1"}], "googleScholarLink": "https://scholar.google.com/scholar?as_q=JavaPoet&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref21"}, {"order": "22", "text": "<em>Espresso</em>.", "title": "Espresso", "context": [{"sec": "sec4", "text": " The implementation of Diffdroid extends the Espresso [22] framework to generate and execute test cases.", "part": "1"}, {"sec": "sec7", "text": "The fragmentation of the Android ecosystem has been studied in the literature [30], [31], [2]\u2013[22][36].", "part": "1"}], "googleScholarLink": "https://scholar.google.com/scholar?as_q=Espresso&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref22"}, {"order": "23", "text": "A. Vacavant, C. Godfrey, J. Terrace, <em>pyssim</em>.", "title": "pyssim", "context": [{"sec": "sec4", "text": " The test case encoding module uses the implementation of CW-SSIM offered by pyssim [23] to compare screenshots taken by the input generation module and minimize the number of UI hierarchies and screenshots generated during test execution.", "part": "1"}, {"sec": "sec7", "text": "The fragmentation of the Android ecosystem has been studied in the literature [30], [31], [2]\u2013[23][36].", "part": "1"}], "googleScholarLink": "https://scholar.google.com/scholar?as_q=pyssim&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref23"}, {"order": "24", "text": "<em>Device Farm</em>.", "title": "Device Farm", "context": [{"sec": "sec4", "text": "The test case execution module leverages the AWS Device Farm [24] to execute test cases on real devices.", "part": "1"}, {"sec": "sec5a", "text": " We used the AWS Device Farm [24] for this purpose.", "part": "1"}, {"sec": "sec7", "text": "The fragmentation of the Android ecosystem has been studied in the literature [30], [31], [2]\u2013[24][36].", "part": "1"}], "googleScholarLink": "https://scholar.google.com/scholar?as_q=Device+Farm&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref24"}, {"order": "25", "text": "<em>Weka</em>.", "title": "Weka", "context": [{"sec": "sec4", "text": "Finally, the CPI analysis module generates the decision tree classifier used to detect CPIs by leveraging the Weka data mining framework [25].", "part": "1"}, {"sec": "sec5a", "text": " We used the Weka data mining framework [25] to generate a C4.5 decision tree classifier.", "part": "1"}, {"sec": "sec7", "text": "The fragmentation of the Android ecosystem has been studied in the literature [30], [31], [2]\u2013[25][36].", "part": "1"}], "googleScholarLink": "https://scholar.google.com/scholar?as_q=Weka&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref25"}, {"order": "26", "text": "<em>OpenCV</em>.", "title": "OpenCV", "context": [{"sec": "sec4", "text": " The CW-SSIM index used in the classifier is computed using pyssim, the EMD value is computed using the OpenCV [26] library, and the character recognition task is performed used Tesseract OCR [27] engine.", "part": "1"}, {"sec": "sec7", "text": "The fragmentation of the Android ecosystem has been studied in the literature [30], [31], [2]\u2013[26][36].", "part": "1"}], "googleScholarLink": "https://scholar.google.com/scholar?as_q=OpenCV&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref26"}, {"order": "27", "text": "<em>Tesseract OCR</em>.", "title": "Tesseract OCR", "context": [{"sec": "sec4", "text": " The CW-SSIM index used in the classifier is computed using pyssim, the EMD value is computed using the OpenCV [26] library, and the character recognition task is performed used Tesseract OCR [27] engine.", "part": "1"}, {"sec": "sec7", "text": "The fragmentation of the Android ecosystem has been studied in the literature [30], [31], [2]\u2013[27][36].", "part": "1"}], "googleScholarLink": "https://scholar.google.com/scholar?as_q=Tesseract+OCR&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref27"}, {"order": "28", "text": "<em>GittIub</em>.", "title": "GittIub", "context": [{"sec": "sec5a", "text": " More specifically, we selected five open-source apps from GitHub [28].", "part": "1"}, {"sec": "sec7", "text": "The fragmentation of the Android ecosystem has been studied in the literature [30], [31], [2]\u2013[28][36].", "part": "1"}], "googleScholarLink": "https://scholar.google.com/scholar?as_q=GittIub&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref28"}, {"order": "29", "text": "S. R. Choudhary, A. Gorla, A. Orso, \"Automated Test Input Generation for Android: Are We There Yet? (E)\", <em>Proceedings of the 2015 IEEE/ACM International Conference on Automated Software Engineering (ASE)</em>, 2015.", "title": "Automated Test Input Generation for Android: Are We There Yet? (E)", "context": [{"sec": "sec5a", "text": " We chose this value because in previous work [29] we found that a set of dynamic input generation tools for Android apps hit their maximum coverage within 10 minutes of execution.", "part": "1"}, {"sec": "sec7", "text": "The fragmentation of the Android ecosystem has been studied in the literature [30], [31], [2]\u2013[29][36].", "part": "1"}], "links": {"documentLink": "/document/7372031", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=7372031", "abstract": "Like all software, mobile applications (&#34;apps&#34;) must be adequately tested to gain confidence that they behave correctly. Therefore, in recent years, researchers and practitioners alike have begun to investigate ways to automate apps testing. In particular, because of Android&#39;s open source nature and its large share of the market, a great deal of research has been performed on input generation techniques for apps that run on the Android operating systems. At this point in time, there are in fact ...", "pdfSize": "289KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Automated+Test+Input+Generation+for+Android%3A+Are+We+There+Yet%3F+%28E%29&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref29"}, {"order": "30", "text": "D. Han, C. Zhang, X. Fan, A. Hindle, K. Wong, E. Stroulia, \"Understanding Android Fragmentation with Topic Analysis of Vendor-Specific Bugs\", <em>Proceedings of the 2012 Working Conference on Reverse Engineering</em>, 2012.", "title": "Understanding Android Fragmentation with Topic Analysis of Vendor-Specific Bugs", "context": [{"sec": "sec7", "text": "The fragmentation of the Android ecosystem has been studied in the literature [30], [31], [2]\u2013[30][36].", "part": "1"}, {"sec": "sec7", "text": " Han and colleagues [30] are among the first to study the issues generated by such fragmentation.", "part": "1"}], "links": {"abstract": "The fragmentation of the Android ecosystem causes portability and compatibility issues within the entire Android platform, which increases developer workload, delays application deployment, and ultimately disappoints users. This subject is discussed in the press and in scientific publications but it has yet to be systematically examined. The Android bug reports, as submitted by Android-device users, span across operating-system versions and hardware platforms and can provide interesting evidence...", "pdfSize": "806KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Understanding+Android+Fragmentation+with+Topic+Analysis+of+Vendor-Specific+Bugs&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref30"}, {"order": "31", "text": "A. Holzinger, P. Treitler, W. Slany, \"Making apps useable on multiple different mobile platforms: On interoperability for business application development on smartphones\", <em>International Conference on Availability Reliability and Security</em>, 2012.", "title": "Making apps useable on multiple different mobile platforms: On interoperability for business application development on smartphones", "context": [{"sec": "sec7", "text": "The fragmentation of the Android ecosystem has been studied in the literature [30], [31], [2]\u2013[31][36].", "part": "1"}, {"sec": "sec7", "text": " In this line of research, Holzinger and colleagues [31] discuss the challenges involved in developing apps due to the differences in size and display resolution of different devices.", "part": "1"}], "links": {"crossRefLink": "https://doi.org/10.1007/978-3-642-32498-7_14", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Making+apps+useable+on+multiple+different+mobile+platforms%3A+On+interoperability+for+business+application+development+on+smartphones&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref31"}, {"order": "32", "text": "H. Li, X. Lu, X. Liu, T. Xie, K. Bian, F. X. Lin, Q. Mei, F. Feng, \"Characterizing smartphone usage patterns from millions of Android users\", <em>Proceedings of the 2015 ACM Conference on Internet Measurement Conference</em>, 2015.", "title": "Characterizing smartphone usage patterns from millions of Android users", "context": [{"sec": "sec7", "text": "The fragmentation of the Android ecosystem has been studied in the literature [30], [31], [2]\u2013[32][36].", "part": "1"}], "links": {"acmLink": "https://doi.org/10.1145/2815675.2815686", "abstract": "he prevalence of smart devices has promoted the popular- ity of mobile applications (a.k.a. apps) in recent years. A number of interesting and important questions remain unan- swered, such as why a user likes/dislikes an app, how an app becomes popular or eventually perishes, how a user selects apps to install and interacts with them, how frequently an app is used and how much traffic it generates, etc. This paper presents an empirical analysis of app usage behaviors collected from millions of u...", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Characterizing+smartphone+usage+patterns+from+millions+of+Android+users&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref32"}, {"order": "33", "text": "A. Pathak, Y. C. Hu, M. Zhang, \"Bootstrapping energy debugging on smartphones: a first look at energy bugs in mobile devices\", <em>Proceedings of the 10th ACM Workshop on Hot Topics in Networks</em>, 2011.", "title": "Bootstrapping energy debugging on smartphones: a first look at energy bugs in mobile devices", "context": [{"sec": "sec7", "text": "The fragmentation of the Android ecosystem has been studied in the literature [30], [31], [2]\u2013[33][36].", "part": "1"}], "links": {"acmLink": "https://doi.org/10.1145/2070562.2070567", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Bootstrapping+energy+debugging+on+smartphones%3A+a+first+look+at+energy+bugs+in+mobile+devices&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref33"}, {"order": "34", "text": "Y. Liu, C. Xu, S.-C. Cheung, \"Characterizing and detecting performance bugs for smartphone applications\", <em>Proceedings of the 36th International Conference on Software Engineering</em>, 2014.", "title": "Characterizing and detecting performance bugs for smartphone applications", "context": [{"sec": "sec7", "text": "The fragmentation of the Android ecosystem has been studied in the literature [30], [31], [2]\u2013[34][36].", "part": "1"}], "links": {"acmLink": "https://doi.org/10.1145/2568225.2568229", "abstract": "Smartphone applications\u2019 performance has a vital impact on user experience. However, many smartphone applications suffer from bugs that cause significant performance degradation, thereby losing their competitive edge. Unfortunately, people have little understanding of these performance bugs. They also lack effective techniques to fight with such bugs. To bridge this gap, we conducted a study of 70 real-world performance bugs collected from eight large-scale and popular Android applications. We s...", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Characterizing+and+detecting+performance+bugs+for+smartphone+applications&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref34"}, {"order": "35", "text": "L. Wu, M. Grace, Y. Zhou, C. Wu, X. Jiang, \"The impact of vendor customizations on android security\", <em>Proceedings of the 2013 ACM SIGSAC conference on Computer & communications security</em>, 2013.", "title": "The impact of vendor customizations on android security", "context": [{"sec": "sec7", "text": "The fragmentation of the Android ecosystem has been studied in the literature [30], [31], [2]\u2013[35][36].", "part": "1"}], "links": {"acmLink": "https://doi.org/10.1145/2508859.2516728", "abstract": "The smartphone market has grown explosively in recent years, as more and more consumers are attracted to the sensor-studded multipurpose devices. Android is particularly ascendant; as an open platform, smartphone manufacturers are free to extend and modify it, allowing them to differentiate themselves from their competitors. However, vendor customizations will inherently impact overall Android security and such impact is still largely unknown. In this paper, we analyze ten representative stock A...", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=The+impact+of+vendor+customizations+on+android+security&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref35"}, {"order": "36", "text": "X. Zhou, Y. Lee, N. Zhang, M. Naveed, X. Wang, \"The peril offrag-mentation: Security hazards in android device driver customizations\", <em>2014 IEEE Symposium on Security and Privacy (SP)</em>, 2014.", "title": "The peril offrag-mentation: Security hazards in android device driver customizations", "context": [{"sec": "sec7", "text": "The fragmentation of the Android ecosystem has been studied in the literature [30], [31], [2]\u2013[36].", "part": "1"}], "links": {"documentLink": "/document/6956578", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=6956578", "abstract": "Android phone manufacturers are under the perpetual pressure to move quickly on their new models, continuously customizing Android to fit their hardware. However, the security implications of this practice are less known, particularly when it comes to the changes made to Android&#39;s Linux device drivers, e.g., those for camera, GPS, NFC etc. In this paper, we report the first study aimed at a better understanding of the security risks in this customization process. Our study is based on ADDICTED, ...", "pdfSize": "470KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=The+peril+offrag-mentation%3A+Security+hazards+in+android+device+driver+customizations&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref36"}, {"order": "37", "text": "X. Lu, X. Liu, H. Li, T. Xie, Q. Mei, D. Hao, G. Huang, F. Feng, \"PRADA: Prioritizing android devices for apps by mining large-scale usage data\", <em>Proceedings of the 38th International Conference on Software Engineering</em>, 2016.", "title": "PRADA: Prioritizing android devices for apps by mining large-scale usage data", "context": [{"sec": "sec7", "text": "The work on Android fragmentation led to studies on device prioritization for app testing [37]\u2013[39].", "part": "1"}, {"sec": "sec7", "text": " The recent work from Lu and colleagues [37], in particular, proposes a technique to prioritize Android device models for individual apps, based on mining large-scale usage data.", "part": "1"}], "links": {"acmLink": "https://doi.org/10.1145/2884781.2884828", "abstract": "Selecting and prioritizing major device models are critical for mobile app developers to select testbeds and optimize resources such as marketing and quality-assurance resources. The heavily fragmented distribution of Android devices makes it challenging to select a few major device models out of thousands of models available on the market. Currently app developers usually rely on some reported or estimated general market share of device models. However, these estimates can be quite inaccurate, ...", "pdfSize": "468KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=PRADA%3A+Prioritizing+android+devices+for+apps+by+mining+large-scale+usage+data&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref37"}, {"order": "38", "text": "S. Vilkomir, B. Amstutz, \"Using combinatorial approaches for testing mobile applications\", <em>2014 IEEE International Conference on Software Testing Verification and Validation Workshops (ICSTW)</em>, 2014.", "title": "Using combinatorial approaches for testing mobile applications", "context": [{"sec": "sec7", "text": "The work on Android fragmentation led to studies on device prioritization for app testing [37]\u2013[38][39].", "part": "1"}], "links": {"documentLink": "/document/6825641", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=6825641", "abstract": "Device-specific faults are very common for mobile software applications. To avoid such faults and guarantee the reliability and quality of mobile applications, sufficient testing is required on different mobile devices, which is expensive and time-consuming. This makes the task of the optimal selection of mobile devices for testing important and interesting from both practical and theoretical points of view. The suggested approach in this paper is based on combinatorial methods for coverage of e...", "pdfSize": "298KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Using+combinatorial+approaches+for+testing+mobile+applications&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref38"}, {"order": "39", "text": "H. Khalid, M. Nagappan, E. Shihab, A. E. Hassan, \"Prioritizing the devices to test your app on: A case study of android game apps\", <em>Proceedings of the 22nd ACM SIGSOFT International Symposium on Foundations of Software Engineering</em>, 2014.", "title": "Prioritizing the devices to test your app on: A case study of android game apps", "context": [{"sec": "sec7", "text": "The work on Android fragmentation led to studies on device prioritization for app testing [37]\u2013[39].", "part": "1"}], "links": {"acmLink": "https://doi.org/10.1145/2635868.2635909", "abstract": "Star ratings that are given by the users of mobile apps directly impact the revenue of its developers. At the same time, for popular platforms like Android, these apps must run on hundreds of devices increasing the chance for device-specific problems. Device-specific problems could impact the rating assigned to an app, given the varying capabilities of devices (e.g., hardware and software). To fix device-specific problems developers must test their apps on a large number of Android devices, whic...", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Prioritizing+the+devices+to+test+your+app+on%3A+A+case+study+of+android+game+apps&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref39"}, {"order": "40", "text": "L. Wei, Y. Liu, S.-C. Cheung, \"Taming Android fragmentation: Characterizing and detecting compatibility issues for Android apps\", <em>2016 IEEE/ACM International Conference on Automated Software Engineering (ASE)</em>, 2016.", "title": "Taming Android fragmentation: Characterizing and detecting compatibility issues for Android apps", "context": [{"sec": "sec7", "text": "Other related work tries to find compatibility issues in Android apps [40].", "part": "1"}], "links": {"acmLink": "https://doi.org/10.1145/2970276.2970312", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Taming+Android+fragmentation%3A+Characterizing+and+detecting+compatibility+issues+for+Android+apps&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref40"}, {"order": "41", "text": "S. R. Choudhary, H. Versee, A. Orso, \"Webdiff: Automated Identification of Cross-Browser Issues in Web Applications\", <em>2010 IEEE International Conference on Software Maintenance (ICSM)</em>, 2010.", "title": "Webdiff: Automated Identification of Cross-Browser Issues in Web Applications", "context": [{"sec": "sec7", "text": "Finally, our work relates to the work on inconsistency identification for web apps [41]\u2013[45].", "part": "1"}, {"sec": "sec7", "text": " Roy Choud-hary and colleagues [41] propose a technique that crawls the web app under test in different browsers, collects DOM trees and screenshots for web pages in the app, and compares collected trees and images to identify inconsistencies.", "part": "1"}], "links": {"documentLink": "/document/5609723", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=5609723", "abstract": "Cross-browser (and cross-platform) issues are prevalent in modern web based applications and range from minor cosmetic bugs to critical functional failures. In spite of the relevance of these issues, cross-browser testing of web applications is still a fairly immature field. Existing tools and techniques require a considerable manual effort to identify such issues and provide limited support to developers for fixing the underlying cause of the issues. To address these limitations, we propose a t...", "pdfSize": "752KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Webdiff%3A+Automated+Identification+of+Cross-Browser+Issues+in+Web+Applications&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref41"}, {"order": "42", "text": "A. Mesbah, M. R. Prasad, \"Automated Cross-Browser Compatibility Testing\", <em>Proceedings of the 33rd International Conference on Software Engineering</em>, 2011.", "title": "Automated Cross-Browser Compatibility Testing", "context": [{"sec": "sec7", "text": "Finally, our work relates to the work on inconsistency identification for web apps [41]\u2013[42][45].", "part": "1"}], "links": {"acmLink": "https://doi.org/10.1145/1985793.1985870", "abstract": "With the advent of Web 2.0 applications and new browsers, the cross-browser compatibility issue is becoming increasingly important. Although the problem is widely recognized among web developers, no systematic approach to tackle it exists today. None of the current tools, which provide screenshots or emulation environments, specifies any notion of cross-browser compatibility, much less check it automatically. In this paper, we pose the problem of cross-browser compatibility testing of modern web...", "pdfSize": "622KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Automated+Cross-Browser+Compatibility+Testing&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref42"}, {"order": "43", "text": "S. R. Choudhary, M. R. Prasad, A. Orso, \"Crosscheck: Combining Crawling and Differencing to Better Detect Cross-Browser Incompatibilities in Web Applications\", <em>2012 IEEE International Conference on Software Testing Verification and Validation (ICST)</em>, 2012.", "title": "Crosscheck: Combining Crawling and Differencing to Better Detect Cross-Browser Incompatibilities in Web Applications", "context": [{"sec": "sec7", "text": "Finally, our work relates to the work on inconsistency identification for web apps [41]\u2013[43][45].", "part": "1"}], "links": {"documentLink": "/document/6200112", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=6200112", "abstract": "One of the consequences of the continuous and rapid evolution of web technologies is the amount of inconsistencies between web browsers implementations. Such inconsistencies can result in cross-browser incompatibilities (XBIs)-situations in which the same web application can behave differently when run on different browsers. In some cases, XBIs consist of tolerable cosmetic differences. In other cases, however, they may completely prevent users from accessing part of a web application&#39;s function...", "pdfSize": "556KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Crosscheck%3A+Combining+Crawling+and+Differencing+to+Better+Detect+Cross-Browser+Incompatibilities+in+Web+Applications&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref43"}, {"order": "44", "text": "V. Dallmeier, M. Burger, T. Orth, A. Zeller, \"Webmate: a Tool for Testing Web 2.0 Applications\", <em>Proceedings of the Workshop on JavaScript Tools</em>, 2012.", "title": "Webmate: a Tool for Testing Web 2.0 Applications", "context": [{"sec": "sec7", "text": "Finally, our work relates to the work on inconsistency identification for web apps [41]\u2013[44][45].", "part": "1"}], "links": {"acmLink": "https://doi.org/10.1145/2307720.2307722", "abstract": "Quality assurance of Web applications is a challenge, due to the large number and variance of involved components. In particular, rich Web 2.0 applications based on JavaScript pose new challenges for testing, as a simple crawling through links covers only a small part of the functionality. The WEBMATE approach automatically explores and navigates through arbitrary Web 2.0 applications. WEBMATE addresses challenges such as interactive elements, state abstraction, and non-determinism in large appl...", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Webmate%3A+a+Tool+for+Testing+Web+2.0+Applications&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref44"}, {"order": "45", "text": "S. Roy, M. R. Prasad, A. Orso, \"X-PERT: Accurate Identification of Cross-Browser Issues in Web Applications\", <em>Proceedings of the 2013 International Conference on Software Engineering</em>, 2013.", "title": "X-PERT: Accurate Identification of Cross-Browser Issues in Web Applications", "context": [{"sec": "sec7", "text": "Finally, our work relates to the work on inconsistency identification for web apps [41]\u2013[45].", "part": "1"}], "googleScholarLink": "https://scholar.google.com/scholar?as_q=X-PERT%3A+Accurate+Identification+of+Cross-Browser+Issues+in+Web+Applications&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref45"}], "pdfLink": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115644", "articleId": "8115644", "startPage": "308", "endPage": "318", "pubLink": "https://ieeexplore.ieee.org/xpl/conhome/8106906/proceeding", "issueLink": "https://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=8115603", "publisher": "IEEE", "confLoc": "Urbana, IL, USA", "chronDate": "Oct. 30 2017-Nov. 3 2017", "metrics": {"citationCountPaper": 9, "citationCountPatent": 0, "totalDownloads": 234}}
{"title": "Synthesising Interprocedural Bit-Precise Termination Proofs (T)", "authors": [{"name": "Hong-Yi Chen", "affiliation": "Dept. of Comput. Sci., Univ. of Oxford, Oxford, UK", "firstName": "Hong-Yi", "lastName": "Chen", "id": "37085688922"}, {"name": "Cristina David", "affiliation": "Dept. of Comput. Sci., Univ. of Oxford, Oxford, UK", "firstName": "Cristina", "lastName": "David", "id": "37085682580"}, {"name": "Daniel Kroening", "affiliation": "Dept. of Comput. Sci., Univ. of Oxford, Oxford, UK", "firstName": "Daniel", "lastName": "Kroening", "id": "37273324900"}, {"name": "Peter Schrammel", "affiliation": "Dept. of Comput. Sci., Univ. of Oxford, Oxford, UK", "firstName": "Peter", "lastName": "Schrammel", "id": "37085534261"}, {"name": "Bj\u00f6rn Wachter", "affiliation": "Dept. of Comput. Sci., Univ. of Oxford, Oxford, UK", "firstName": "Bj\u00f6rn", "lastName": "Wachter", "id": "37718209000"}], "abstract": "Proving program termination is key to guaranteeing absence of undesirable behaviour, such as hanging programs and even security vulnerabilities such as denial-of-service attacks. To make termination checks scale to large systems, interprocedural termination analysis seems essential, which is a largely unexplored area of research in termination analysis, where most effort has focussed on difficult single-procedure problems. We present a modular termination analysis for C programs using template-based interprocedural summarisation. Our analysis combines a context-sensitive, over-approximating forward analysis with the inference of under-approximating preconditions for termination. Bit-precise termination arguments are synthesised over lexicographic linear ranking function templates. Our experimental results show that our tool 2LS outperforms state-of-the-art alternatives, and demonstrate the clear advantage of interprocedural reasoning over monolithic analysis in terms of efficiency, while retaining comparable precision.", "keywords": [{"type": "IEEE Keywords", "kwd": ["Context", "Algorithm design and analysis", "Encoding", "Semantics", "Computer crime", "Computer bugs"]}, {"type": "INSPEC: Controlled Indexing", "kwd": ["C language", "computer network security", "inference mechanisms", "program diagnostics", "theorem proving"]}, {"type": "INSPEC: Non-Controlled Indexing", "kwd": ["synthesising interprocedural bit-precise termination proof", "program termination", "security vulnerability", "denial-of-service attack", "large system", "interprocedural termination analysis", "modular termination analysis", "C program", "template-based interprocedural summarisation", "context-sensitive forward analysis", "over-approximating forward analysis", "inference", "bit-precise termination argument", "lexicographic linear ranking function template", "interprocedural reasoning", "monolithic analysis"]}, {"type": "Author Keywords ", "kwd": ["program analysis", "termination analysis", "interprocedural analysis", "synthesis", "abstract interpretation"]}], "publication": "2015 30th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "doi": "10.1109/ASE.2015.10", "ref": [{"order": "1", "text": " [online]  Available: http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-1890.", "context": [{"sec": "sec1", "text": " In particular, termination bugs can be exploited in denial-of-service attacks [1].", "part": "1"}], "refType": "biblio", "id": "ref1"}, {"order": "2", "text": "A. M. Ben-Amram, S. Genaim, \"On the linear ranking problem for integer linear-constraint loops\", <em>Principles of Programming Languages</em>, pp. 51-62, 2013.", "title": "On the linear ranking problem for integer linear-constraint loops", "context": [{"sec": "sec1", "text": " [2], [3]) or non-linear termination arguments (e.g. [4]) in a completely automatic way.", "part": "1"}, {"sec": "sec8", "text": " As opposed to the synthesis of termination arguments for linear programs over integers (rationals) [34], [35], [2], [36], [37], [14], [15], this subclass of termination analyses is substantially less covered.", "part": "1"}], "links": {"acmLink": "https://doi.org/10.1145/2429069.2429078", "abstract": "In this paper we study the complexity of the Linear Ranking problem: given a loop, described by linear constraints over a finite set of integer variables, is there a linear ranking function for this loop? While existence of such a function implies termination, this problem is not equivalent to termination. When the variables range over the rationals or reals, the Linear Ranking problem is known to be PTIME decidable. However, when they range over the integers, whether for single-path or multipat...", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=On+the+linear+ranking+problem+for+integer+linear-constraint+loops&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref2"}, {"order": "3", "text": "J. Leike, M. Heizmann, \"Ranking templates for linear loops\", vol. 8413, pp. 172-186, 2014.", "title": "Ranking templates for linear loops", "context": [{"sec": "sec1", "text": " They compute proofs for complex loops that may require linear lexicographic (e.g. [2], [3]) or non-linear termination arguments (e.g. [4]) in a completely automatic way.", "part": "1"}], "links": {"crossRefLink": "https://doi.org/10.1007/978-3-642-54862-8_12", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Ranking+templates+for+linear+loops&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref3"}, {"order": "4", "text": "A. R. Bradley, Z. Manna, H. B. Sipma, \"Termination of polynomial programs\", <em>Verification Model Checking and Abstract Interpretation</em>, pp. 113-129, 2005.", "title": "Termination of polynomial programs", "context": [{"sec": "sec1", "text": " [4]) in a completely automatic way.", "part": "1"}], "links": {"crossRefLink": "https://doi.org/10.1007/978-3-540-30579-8_8", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Termination+of+polynomial+programs&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref4"}, {"order": "5", "text": "S. Falke, D. Kapur, C. Sinz, \"Termination analysis of imperative programs using bitvector arithmetic\", <em>Verified Software: Theories Tools Experiments</em>, pp. 261-277, 2012.", "title": "Termination analysis of imperative programs using bitvector arithmetic", "context": [{"sec": "sec1", "text": "First of all, as observed by [5], most approaches in the literature are specialised to linear arithmetic over unbounded mathematical integers.", "part": "1"}, {"sec": "sec7", "text": "TAN [16] and KiTTeL/KoAT [5] support bit-precise C semantics.", "part": "1"}], "links": {"crossRefLink": "https://doi.org/10.1007/978-3-642-27705-4_21", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Termination+analysis+of+imperative+programs+using+bitvector+arithmetic&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref5"}, {"order": "6", "text": "D. Beyer, \"Status report on software verification - (competition summary SV-COMP 2014)\", <em>Tools and Algorithms for the Construction and Analysis of Systems</em>, vol. 8413, 2014.", "title": "Status report on software verification - (competition summary SV-COMP 2014)", "context": [{"sec": "sec1", "text": " The yearly Software Verification Competition (SV-COMP) [6] includes a division in termination analysis, which reflects a representative picture of the state of the art.", "part": "1"}], "googleScholarLink": "https://scholar.google.com/scholar?as_q=Status+report+on+software+verification+-+%28competition+summary+SV-COMP+2014%29&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref6"}, {"order": "7", "text": "H.-Y. Chen, C. David, D. Kroening, P. Schrammel, B. Wachter, \"Synthesising interprocedural bit-precise termination proofs (extended version)\", 2015,  [online]  Available: http://arxiv.org/abs/1505.04581.", "title": "Synthesising interprocedural bit-precise termination proofs (extended version)", "context": [{"sec": "sec2", "text": "A full description of the program encoding is given in the extended version of our paper [7].", "part": "1"}, {"sec": "sec5", "text": "Due to space limitations, we refer to the extended version [7], which includes a detailed description of the synthesis engine, our program encoding, encoding of bit-precise arithmetic, and tailored second-order solving techniques for the different constraints that occur in our analysis.", "part": "1"}, {"sec": "sec6", "text": "Discussions about technical issues w.r.t. bit-preciseness and the computation of intraprocedural termination arguments can be found in the extended version [7].", "part": "1"}], "googleScholarLink": "https://scholar.google.com/scholar?as_q=Synthesising+interprocedural+bit-precise+termination+proofs+%28extended+version%29&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref7"}, {"order": "8", "text": "B. Cook, S. Gulwani, T. Lev-Ami, A. Rybalchenko, M. Sagiv, \"Proving conditional termination\", <em>Computer-Aided Verification</em>, pp. 328-340, 2008.", "title": "Proving conditional termination", "context": [{"sec": "sec3", "text": " In this work, we use a method similar to [8] to obtain under-approximating preconditions w.r.t. property p: we infer an over-approximating precondition w.r. t. \u2018p and negate the result.", "part": "1"}, {"sec": "sec8", "text": "Conditional termination has recently attracted increased interest [8], [46], [47], [48], [49].", "part": "1"}, {"sec": "sec8", "text": " The same concept is used by other works [8], [46].", "part": "1"}, {"sec": "sec8", "text": " Moreover, by contrast to Cook et al [8] who use an heuristic FINITE-operator left unspecified for bootstrapping their preconditions, our bootstrapping is systematic through constraint solving.", "part": "1"}], "links": {"crossRefLink": "https://doi.org/10.1007/978-3-540-70545-1_32", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Proving+conditional+termination&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref8"}, {"order": "9", "text": "S. Sankaranarayanan, H. B. Sipma, Z. Manna, \"Scalable analysis of linear systems using mathematical programming\", <em>Verification Model Checking and Abstract Interpretation</em>, pp. 25-41, 2005.", "title": "Scalable analysis of linear systems using mathematical programming", "context": [{"sec": "sec5", "text": " To allow for a flexible choice, we consider template polyhedra [9].", "part": "1"}], "links": {"crossRefLink": "https://doi.org/10.1007/978-3-540-30579-8_2", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Scalable+analysis+of+linear+systems+using+mathematical+programming&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref9"}, {"order": "10", "text": "P. Cousot, R. Cousot, \"Abstract interpretation: A unified lattice model for static analysis of programs by construction or approximation of fixpoints\", <em>Principles of Programming Languages</em>, pp. 238-252, 1977.", "title": "Abstract interpretation: A unified lattice model for static analysis of programs by construction or approximation of fixpoints", "context": [{"sec": "sec5", "text": "This ultimately follows from the soundness of abstract interpretation [10].", "part": "1"}], "links": {"acmLink": "https://doi.org/10.1145/512950.512973", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Abstract+interpretation%3A+A+unified+lattice+model+for+static+analysis+of+programs+by+construction+or+approximation+of+fixpoints&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref10"}, {"order": "11", "text": "T. M. Gawlitza, H. Seidl, \"Precise relational invariants through strategy iteration\", <em>Computer Science Logic</em>, pp. 23-40, 2007.", "title": "Precise relational invariants through strategy iteration", "context": [{"sec": "sec5", "text": " Similar approaches have been described, for instance, by [11]\u2013[13].", "part": "1"}], "links": {"crossRefLink": "https://doi.org/10.1007/978-3-540-74915-8_6", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Precise+relational+invariants+through+strategy+iteration&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref11"}, {"order": "12", "text": "S. Gulwani, S. Srivastava, R. Venkatesan, \"Program analysis as constraint solving\", <em>Programming Language Design and Implementation</em>, pp. 281-292, 2008.", "title": "Program analysis as constraint solving", "context": [{"sec": "sec5", "text": " Similar approaches have been described, for instance, by [11]\u2013[12][13].", "part": "1"}], "links": {"acmLink": "https://doi.org/10.1145/1375581.1375616", "abstract": "A constraint-based approach to invariant generation in programs translates a program into constraints that are solved using off-the-shelf constraint solvers to yield desired program invariants. In this paper we show how the constraint-based approach can be used to model a wide spectrum of program analyses in an expressive domain containing disjunctions and conjunctions of linear inequalities. In particular, we show how to model the problem of context-sensitive interprocedural program verificatio...", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Program+analysis+as+constraint+solving&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref12"}, {"order": "13", "text": "Y. Li, A. Albarghouthi, Z. Kincaid, A. Gurfinkel, M. Chechik, \"Symbolic optimization with SMT solvers\", <em>Principles of Programming Languages</em>, pp. 607-618, 2014.", "title": "Symbolic optimization with SMT solvers", "context": [{"sec": "sec5", "text": " Similar approaches have been described, for instance, by [11]\u2013[13].", "part": "1"}], "links": {"acmLink": "https://doi.org/10.1145/2535838.2535857", "abstract": "The rise in efficiency of Satisfiability Modulo Theories (SMT) solvers has created numerous uses for them in software verification, program synthesis, functional programming, refinement types, etc. In all of these applications, SMT solvers are used for generating satisfying assignments (e.g., a witness for a bug) or proving unsatisfiability/validity(e.g., proving that a subtyping relation holds). We are often interested in finding not just an arbitrary satisfying assignment, but one that optimiz...", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Symbolic+optimization+with+SMT+solvers&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref13"}, {"order": "14", "text": "A. R. Brabley, Z. Manna, H. B. Sipma, \"Linear ranking with reachability\", <em>Computer-Aided Verification</em>, pp. 491-504, 2005.", "title": "Linear ranking with reachability", "context": [{"sec": "sec5", "text": " To achieve both expressiveness and efficiency, we generate linear lexicographic functions [14], [15].", "part": "1"}, {"sec": "sec8", "text": " As opposed to the synthesis of termination arguments for linear programs over integers (rationals) [34], [35], [2], [36], [37], [14], [15], this subclass of termination analyses is substantially less covered.", "part": "1"}], "links": {"crossRefLink": "https://doi.org/10.1007/11513988_48", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Linear+ranking+with+reachability&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref14"}, {"order": "15", "text": "B. Cook, A. See, F. Zuleger, \"Ramsey vs. lexicographic termination proving\", <em>Tools and Algorithms for the Construction and Analysis of Systems</em>, pp. 47-61, 2013.", "title": "Ramsey vs. lexicographic termination proving", "context": [{"sec": "sec5", "text": " To achieve both expressiveness and efficiency, we generate linear lexicographic functions [14], [15].", "part": "1"}, {"sec": "sec8", "text": " As opposed to the synthesis of termination arguments for linear programs over integers (rationals) [34], [35], [2], [36], [37], [14], [15], this subclass of termination analyses is substantially less covered.", "part": "1"}, {"sec": "sec8", "text": " Similar to [15], we could use [40] in order to abstract heap-manipulating programs to arithmetic ones.", "part": "1"}], "googleScholarLink": "https://scholar.google.com/scholar?as_q=Ramsey+vs.+lexicographic+termination+proving&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref15"}, {"order": "16", "text": "D. Kroening, N. Sharygina, A. Tsitovich, C. M. Wintersteiger, \"Termination analysis with compositional transition invariants\", <em>Computer-Aided Verification</em>, pp. 89-103, 2010.", "title": "Termination analysis with compositional transition invariants", "context": [{"sec": "sec5", "text": " Our ranking-function synthesis approach is similar to the TAN tool [16] but extends the approach from monolithic to lexicographic ranking functions.", "part": "1"}, {"sec": "sec7", "text": "TAN [16] and KiTTeL/KoAT [5] support bit-precise C semantics.", "part": "1"}, {"sec": "sec8", "text": " While [16], [38] present methods based on a reduction to Presburger arithmetic, and a template-matching approach for predefined classes of ranking functions based on reduction to SAT- and QBF-solving, [39] only compute intraprocedural termination arguments.", "part": "1"}], "links": {"crossRefLink": "https://doi.org/10.1007/978-3-642-14295-6_9", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Termination+analysis+with+compositional+transition+invariants&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref16"}, {"order": "17", "text": " [online]  Available: http://www.cprover.org/wiki/doku.php?id=2Is_for_program_analysis.", "context": [{"sec": "sec6", "text": "We have implemented the algorithm in 2LS [17], a static analysis tool for C programs built on the CPROVER framework, using MiniSat 2.2.0 as back-end solver.", "part": "1"}, {"sec": "sec7", "text": " We elaborate on these limitations in [17].", "part": "1"}], "refType": "biblio", "id": "ref17"}, {"order": "18", "text": " [online]  Available: https://svn.sosy-lab.org/software/sv-benchmarks/tags/svcomp14/product-lines/.", "context": [{"sec": "sec7", "text": "We used the product line benchmarks of the [18] benchmark repository.", "part": "1"}], "refType": "biblio", "id": "ref18"}, {"order": "19", "text": "O. Roussel, \"Controlling a solver execution with the runsolver tool\", <em>Journal on Satisfiability Boolean Modeling and Computation</em>, vol. 7, no. 4, pp. 139-144, 2011.", "title": "Controlling a solver execution with the runsolver tool", "context": [{"sec": "sec7", "text": " Memory and CPU time were restricted to 16 GB and 1800 seconds per benchmark, respectively (using [19]).", "part": "1"}], "googleScholarLink": "https://scholar.google.com/scholar?as_q=Controlling+a+solver+execution+with+the+runsolver+tool&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref19"}, {"order": "20", "text": " [online]  Available: http://www.cprover.org/termination/.", "context": [{"sec": "sec7", "text": "We compared 2LS with two termination tools for C programs from the SV-COMP termination competition, namely TAN [20] and Ultimate [21].", "part": "1"}], "refType": "biblio", "id": "ref20"}, {"order": "21", "text": "M. Heizmann, D. Dietsch, J. Leike, B. Musa, A. Podelski, \"Ultimate automizer with array interpolation - (competition contribution)\", <em>Tools and Algorithms for the Construction and Analysis of Systems vol. 9035 of LNCS Springer</em>, 2015.", "title": "Ultimate automizer with array interpolation - (competition contribution)", "context": [{"sec": "sec7", "text": "We compared 2LS with two termination tools for C programs from the SV-COMP termination competition, namely TAN [20] and Ultimate [21].", "part": "1"}], "googleScholarLink": "https://scholar.google.com/scholar?as_q=Ultimate+automizer+with+array+interpolation+-+%28competition+contribution%29&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref21"}, {"order": "22", "text": "T. Str\u00f6der, C. Aschermann, F. Frohn, J. Hensel, J. Giesl, \"AProVE: Termination and Memory Safety of C programs - (competition contribution)\", <em>Tools and Algorithms for the Construction and Analysis of Systems vol. 9035 of LNCS Springer 2015</em>, 2014.", "title": "AProVE: Termination and Memory Safety of C programs - (competition contribution)", "context": [{"sec": "sec7", "text": "Unfortunately, the tools [22]\u2013[24], [25], and [26] have limitations regarding the subset of C that they can handle that make them unable to analyze any of the benchmarks out of the box.", "part": "1"}], "googleScholarLink": "https://scholar.google.com/scholar?as_q=AProVE%3A+Termination+and+Memory+Safety+of+C+programs+-+%28competition+contribution%29&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref22"}, {"order": "23", "text": " [online]  Available: http://forsyte.at/software/loopus/withhttp://sourceforge.net/projects/virtualboximage/.", "context": [{"sec": "sec7", "text": "Unfortunately, the tools [22]\u2013[23][24], [25], and [26] have limitations regarding the subset of C that they can handle that make them unable to analyze any of the benchmarks out of the box.", "part": "1"}, {"sec": "sec7", "text": "We compared 2LS with Loopus on a collection of 15 benchmarks (ABC_ex01. c to ABC_ex15. c) taken from the Loopus benchmark suite [23].", "part": "1"}], "refType": "biblio", "id": "ref23"}, {"order": "24", "text": "<em>version SV-COMP-2015</em>,  [online]  Available: http://www.di.ensJr/~vurban/sv-comp2015.zip.", "title": "version SV-COMP-2015", "context": [{"sec": "sec7", "text": "Unfortunately, the tools [22]\u2013[24], [25], and [26] have limitations regarding the subset of C that they can handle that make them unable to analyze any of the benchmarks out of the box.", "part": "1"}], "googleScholarLink": "https://scholar.google.com/scholar?as_q=version+SV-COMP-2015&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref24"}, {"order": "25", "text": "T. C. Le, C. Gherghina, A. Hobor, W. Chin, \"A resource-based logic for termination and non-termination proofs\", <em>ICFEM</em>, pp. 267-283, 2014.", "title": "A resource-based logic for termination and non-termination proofs", "context": [{"sec": "sec7", "text": "Unfortunately, the tools [22]\u2013[24], [25], and [26] have limitations regarding the subset of C that they can handle that make them unable to analyze any of the benchmarks out of the box.", "part": "1"}], "links": {"crossRefLink": "https://doi.org/10.1007/978-3-319-11737-9_18", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=A+resource-based+logic+for+termination+and+non-termination+proofs&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref25"}, {"order": "26", "text": "A. Podelski, A. Rybalchenko, \"ARMC: the logical choice for software model checking with abstraction refinement\", <em>Practical Aspects of Declarative Languages vol. 4354 of LNCS Springer 2007</em>, August 2011.", "title": "ARMC: the logical choice for software model checking with abstraction refinement", "context": [{"sec": "sec7", "text": "Unfortunately, the tools [22]\u2013[24], [25], and [26] have limitations regarding the subset of C that they can handle that make them unable to analyze any of the benchmarks out of the box.", "part": "1"}], "googleScholarLink": "https://scholar.google.com/scholar?as_q=ARMC%3A+the+logical+choice+for+software+model+checking+with+abstraction+refinement&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref26"}, {"order": "27", "text": " [online]  Available: http://research.microsoft.com/en-us/projects/t2/version2014-10.", "context": [{"sec": "sec7", "text": " Unfortunately, we did not succeed to generate the correct input files in the intermediate formats required by T2 [27] and KiTTeL [28] using the recommended frontends [29] and [30].", "part": "1"}], "refType": "biblio", "id": "ref27"}, {"order": "28", "text": " [online]  Available: https://github.com/s-falke/kittel-koat.", "context": [{"sec": "sec7", "text": " Unfortunately, we did not succeed to generate the correct input files in the intermediate formats required by T2 [27] and KiTTeL [28] using the recommended frontends [29] and [30].", "part": "1"}], "refType": "biblio", "id": "ref28"}, {"order": "29", "text": " [online]  Available: http://research.microsoft.com/en-us/projects/slayer/.", "context": [{"sec": "sec7", "text": " Unfortunately, we did not succeed to generate the correct input files in the intermediate formats required by T2 [27] and KiTTeL [28] using the recommended frontends [29] and [30].", "part": "1"}], "refType": "biblio", "id": "ref29"}, {"order": "30", "text": " [online]  Available: https://github.com/mmjb/llvm2kittel.", "context": [{"sec": "sec7", "text": " Unfortunately, we did not succeed to generate the correct input files in the intermediate formats required by T2 [27] and KiTTeL [28] using the recommended frontends [29] and [30].", "part": "1"}], "refType": "biblio", "id": "ref30"}, {"order": "31", "text": "M. Heizmann, J. Hoenicke, A. Podelski, \"Termination analysis by learning terminating programs\", <em>Computer-Aided Verification</em>, pp. 797-813, 2014.", "title": "Termination analysis by learning terminating programs", "context": [{"sec": "sec7", "text": " Also, Ultimate uses a semantic decomposition of the program [31] to make its analysis efficient.", "part": "1"}], "links": {"crossRefLink": "https://doi.org/10.1007/978-3-319-08867-9_53", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Termination+analysis+by+learning+terminating+programs&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref31"}, {"order": "32", "text": " [online]  Available: http://www.netlib.org/clapack/cblas/sasum.c.", "context": [{"sec": "sec7", "text": "The program in Fig. 6 is a code snippet taken from the summation procedure sasurn within [32], the C version of the popular LAPACK linear algebra librarv.", "part": "1"}], "refType": "biblio", "id": "ref32"}, {"order": "33", "text": "S. Grebenshchikov, N. P. Lopes, C. Popeea, A. Rybalchenko, \"Synthesizing software verifiers from proof rules\", <em>Programming Language Design and Implementation</em>, pp. 405-416, 2012.", "title": "Synthesizing software verifiers from proof rules", "context": [{"sec": "sec8", "text": " In addition to [33], we consider context-sensitive analysis, under-approximate backwards analysis, and make the interaction with termination analysis explicit.", "part": "1"}], "googleScholarLink": "https://scholar.google.com/scholar?as_q=Synthesizing+software+verifiers+from+proof+rules&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref33"}, {"order": "34", "text": "B. Cook, A. Podelski, A. Rybalchenko, \"Termination proofs for systems code\", <em>Programming Language Design and Implementation</em>, pp. 415-426, 2006.", "title": "Termination proofs for systems code", "context": [{"sec": "sec8", "text": " As opposed to the synthesis of termination arguments for linear programs over integers (rationals) [34], [35], [2], [36], [37], [14], [15], this subclass of termination analyses is substantially less covered.", "part": "1"}], "links": {"acmLink": "https://doi.org/10.1145/1133981.1134029", "abstract": "Program termination is central to the process of ensuring that systems code can always react. We describe a new program termination prover that performs a path-sensitive and context-sensitive program analysis and provides capacity for large program fragments (i.e. more than 20,000 lines of code) together with support for programming language features such as arbitrarily nested loops, pointers, function-pointers, side-effects, etc.We also present experimental results on device driver dispatch rou...", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Termination+proofs+for+systems+code&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref34"}, {"order": "35", "text": "W. Lee, B.-Y. Wang, K. Yi, \"Termination analysis with algorithmic learning\", <em>Computer-Aided Verification</em>, pp. 88-104, 2012.", "title": "Termination analysis with algorithmic learning", "context": [{"sec": "sec8", "text": " As opposed to the synthesis of termination arguments for linear programs over integers (rationals) [34], [35], [2], [36], [37], [14], [15], this subclass of termination analyses is substantially less covered.", "part": "1"}], "links": {"crossRefLink": "https://doi.org/10.1007/978-3-642-31424-7_12", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Termination+analysis+with+algorithmic+learning&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref35"}, {"order": "36", "text": "A. Podelski, A. Rybalchenko, \"Transition invariants\", <em>Logic in Computer Science</em>, pp. 32-41, 2004.", "title": "Transition invariants", "context": [{"sec": "sec8", "text": " As opposed to the synthesis of termination arguments for linear programs over integers (rationals) [34], [35], [2], [36], [37], [14], [15], this subclass of termination analyses is substantially less covered.", "part": "1"}], "links": {"abstract": "Proof rules for program verification rely on auxiliary assertions. We propose a (sound and relatively complete) proof rule whose auxiliary assertions are transition invariants. A transition invariant of a program is a binary relation over program states that contains the transitive closure of the transition relation of the program. A relation is disjunctively well-founded if it is a finite union of well-founded relations. We characterize the validity of termination or another liveness property b...", "pdfSize": "461KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Transition+invariants&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref36"}, {"order": "37", "text": "M. Heizmann, J. Hoenicke, J. Leike, A. Podelski, \"Linear ranking for linear lasso programs\", <em>Automated Technology for Verification and Analysis</em>, pp. 365-380, 2013.", "title": "Linear ranking for linear lasso programs", "context": [{"sec": "sec8", "text": " As opposed to the synthesis of termination arguments for linear programs over integers (rationals) [34], [35], [2], [36], [37], [14], [15], this subclass of termination analyses is substantially less covered.", "part": "1"}], "links": {"crossRefLink": "https://doi.org/10.1007/978-3-319-02444-8_26", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Linear+ranking+for+linear+lasso+programs&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref37"}, {"order": "38", "text": "B. Cook, D. Kroening, P. R\u00fcmmer, C. M. Wintersteiger, \"Ranking function synthesis for bit-vector relations\", <em>Tools and Algorithms for the Construction and Analysis of Systems</em>, pp. 236-250, 2010.", "title": "Ranking function synthesis for bit-vector relations", "context": [{"sec": "sec8", "text": " While [16], [38] present methods based on a reduction to Presburger arithmetic, and a template-matching approach for predefined classes of ranking functions based on reduction to SAT- and QBF-solving, [39] only compute intraprocedural termination arguments.", "part": "1"}], "links": {"crossRefLink": "https://doi.org/10.1007/978-3-642-12002-2_19", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Ranking+function+synthesis+for+bit-vector+relations&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref38"}, {"order": "39", "text": "C. David, D. Kroening, M. Lewis, \"Unrestricted termination and non-termination arguments for bit-vector programs\", <em>European Symposium on Programming</em>, pp. 183-204, 2015.", "title": "Unrestricted termination and non-termination arguments for bit-vector programs", "context": [{"sec": "sec8", "text": " While [16], [38] present methods based on a reduction to Presburger arithmetic, and a template-matching approach for predefined classes of ranking functions based on reduction to SAT- and QBF-solving, [39] only compute intraprocedural termination arguments.", "part": "1"}], "links": {"crossRefLink": "https://doi.org/10.1007/978-3-662-46669-8_8", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Unrestricted+termination+and+non-termination+arguments+for+bit-vector+programs&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref39"}, {"order": "40", "text": "S. Magill, M.-H. Tsai, P. Lee, Y.-K. Tsay, \"Automatic numeric abstractions for heap-manipulating programs\", <em>Principles of Programming Languages</em>, pp. 211-222, 2010.", "title": "Automatic numeric abstractions for heap-manipulating programs", "context": [{"sec": "sec8", "text": " Similar to [15], we could use [40] in order to abstract heap-manipulating programs to arithmetic ones.", "part": "1"}], "links": {"acmLink": "https://doi.org/10.1145/1706299.1706326", "abstract": "We present a logic for relating heap-manipulating programs to numeric abstractions. These numeric abstractions are expressed as simple imperative programs over integer variables and have the property that termination and safety of the numeric program ensures termination and safety of the original, heap-manipulating program. We have implemented an automated version of this abstraction process and present experimental results for programs involving a variety of data structures.", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Automatic+numeric+abstractions+for+heap-manipulating+programs&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref40"}, {"order": "41", "text": "J. Berdine, B. Cook, D. Distefano, P. W. O'Hearn, \"Automatic termination proofs for programs with shape-shifting heaps\", <em>CAV</em>, pp. 386-400, 2006.", "title": "Automatic termination proofs for programs with shape-shifting heaps", "context": [{"sec": "sec8", "text": " Another option is using an abstract interpretation based on separation logic formulae which tracks the depths of pieces of heaps similarly to [41].", "part": "1"}], "links": {"crossRefLink": "https://doi.org/10.1007/11817963_35", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Automatic+termination+proofs+for+programs+with+shape-shifting+heaps&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref41"}, {"order": "42", "text": "K. L. McMillan, \"Quantified invariant generation using an interpolating saturation prover\", <em>Tools and Algorithms for the Construction and Analysis of Systems</em>, pp. 413-427, 2008.", "title": "Quantified invariant generation using an interpolating saturation prover", "context": [{"sec": "sec8", "text": " String abstractions that reduce null-terminated strings to integers (indices, length, and size) are usually sufficient in many practical cases; scenarios where termination is dependent on the content of arrays are much harder and would require quantified invariants [42].", "part": "1"}], "links": {"crossRefLink": "https://doi.org/10.1007/978-3-540-78800-3_31", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Quantified+invariant+generation+using+an+interpolating+saturation+prover&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref42"}, {"order": "43", "text": "A. Podelski, I. Schaefer, S. Wagner, \"Summaries for while programs with recursion\", <em>European Symposium on Programming</em>, pp. 94-107, 2005.", "title": "Summaries for while programs with recursion", "context": [{"sec": "sec8", "text": " An alternative approach would be to make use of the theoretic framework presented in [43] for verifying total correctness and liveness properties of while programs with recursion.", "part": "1"}], "links": {"crossRefLink": "https://doi.org/10.1007/978-3-540-31987-0_8", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Summaries+for+while+programs+with+recursion&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref43"}, {"order": "44", "text": "E. M. Clarke, O. Grumberg, S. Jha, Y. Lu, H. Veith, \"Counterexample-guided abstraction refinement\", <em>Computer-Aided Verification</em>, pp. 154-169, 2000.", "title": "Counterexample-guided abstraction refinement", "context": [{"sec": "sec8", "text": " While counterexample-guided abstraction refinement (CEGAR) techniques are prevalent in predicate abstraction [44], attempts to use them in abstract interpretation are rare [45].", "part": "1"}], "googleScholarLink": "https://scholar.google.com/scholar?as_q=Counterexample-guided+abstraction+refinement&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref44"}, {"order": "45", "text": "F. Ranzato, O. Rossi-Doria, F. Tapparo, \"A forward-backward abstraction refinement algorithm\", <em>Verification Model Checking and Abstract Interpretation</em>, pp. 248-262, 2008.", "title": "A forward-backward abstraction refinement algorithm", "context": [{"sec": "sec8", "text": " While counterexample-guided abstraction refinement (CEGAR) techniques are prevalent in predicate abstraction [44], attempts to use them in abstract interpretation are rare [45].", "part": "1"}], "links": {"crossRefLink": "https://doi.org/10.1007/978-3-540-78163-9_22", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=A+forward-backward+abstraction+refinement+algorithm&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref45"}, {"order": "46", "text": "M. Bozga, R. Iosif, F. Konecny, \"Deciding conditional termination\", <em>Tools and Algorithms for the Construction and Analysis of Systems</em>, vol. 7214, pp. 252-266, 2012.", "title": "Deciding conditional termination", "context": [{"sec": "sec8", "text": "Conditional termination has recently attracted increased interest [8], [46], [47], [48], [49].", "part": "1"}, {"sec": "sec8", "text": " The same concept is used by other works [8], [46].", "part": "1"}], "links": {"crossRefLink": "https://doi.org/10.1007/978-3-642-28756-5_18", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Deciding+conditional+termination&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref46"}, {"order": "47", "text": "P. Ganty, S. Genaim, \"Proving termination starting from the end\", <em>Computer-Aided Verification</em>, vol. 8044, pp. 397-412, 2013.", "title": "Proving termination starting from the end", "context": [{"sec": "sec8", "text": "Conditional termination has recently attracted increased interest [8], [46], [47], [48], [49].", "part": "1"}], "links": {"crossRefLink": "https://doi.org/10.1007/978-3-642-39799-8_27", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Proving+termination+starting+from+the+end&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref47"}, {"order": "48", "text": "D. Masse, \"Policy iteration-based conditional termination and ranking functions\", <em>Verification Model Checking and Abstract Interpretation</em>, vol. 8318, 2014.", "title": "Policy iteration-based conditional termination and ranking functions", "context": [{"sec": "sec8", "text": "Conditional termination has recently attracted increased interest [8], [46], [47], [48], [49].", "part": "1"}], "links": {"crossRefLink": "https://doi.org/10.1007/978-3-642-54013-4_25", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Policy+iteration-based+conditional+termination+and+ranking+functions&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref48"}, {"order": "49", "text": "C. Urban, A. Mine, \"A decision tree abstract domain for proving conditional termination\", <em>Static Analysis Symposium</em>, vol. 8723, 2014.", "title": "A decision tree abstract domain for proving conditional termination", "context": [{"sec": "sec8", "text": "Conditional termination has recently attracted increased interest [8], [46], [47], [48], [49].", "part": "1"}], "links": {"crossRefLink": "https://doi.org/10.1007/978-3-319-10936-7_19", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=A+decision+tree+abstract+domain+for+proving+conditional+termination&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref49"}, {"order": "50", "text": "P. Ganty, R. Iosif, F. Konecny, \"Uaderapproximation of procedure summaries for integer programs\", <em>Tools and Algorithms for the Construction and Analysis of Systems</em>, vol. 7795, pp. 245-259, 2013.", "title": "Uaderapproximation of procedure summaries for integer programs", "context": [{"sec": "sec8", "text": " [50]).", "part": "1"}], "googleScholarLink": "https://scholar.google.com/scholar?as_q=Uaderapproximation+of+procedure+summaries+for+integer+programs&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref50"}, {"order": "51", "text": "A. Gupta, T. A. Henzinger, R. Majumdar, A. Rybalchenko, R.-G. Xu, \"Proving non-termination\", <em>Principles of Programming Languages</em>, pp. 147-158, 2008.", "title": "Proving non-termination", "context": [{"sec": "sec8", "text": " While [51] dynamically enumerate lasso-shaped candidate paths for counterexamples, and then statically prove their feasibility, [52] prove nontermination via reduction to safety proving and [53] uses bi-abduction to construct summaries of terminating and non-terminating behaviors for each method.", "part": "1"}], "links": {"acmLink": "https://doi.org/10.1145/1328438.1328459", "abstract": "The search for proof and the search for counterexamples (bugs) are complementary activities that need to be pursued concurrently in order to maximize the practical success rate of verification tools.While this is well-understood in safety verification, the current focus of liveness verification has been almost exclusively on the search for termination proofs. A counterexample to termination is an infinite programexecution. In this paper, we propose a method to search for such counterexamples. Th...", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Proving+non-termination&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref51"}, {"order": "52", "text": "H. Y. Chen, B. Cook, C. Fuhs, K. Nimkar, P. W. O'Hearn, \"Proving nontermination via safety\", <em>Tools and Algorithms for the Construction and Analysis of Systems</em>, vol. 8413, pp. 156-171, 2014.", "title": "Proving nontermination via safety", "context": [{"sec": "sec8", "text": " While [51] dynamically enumerate lasso-shaped candidate paths for counterexamples, and then statically prove their feasibility, [52] prove nontermination via reduction to safety proving and [53] uses bi-abduction to construct summaries of terminating and non-terminating behaviors for each method.", "part": "1"}], "links": {"crossRefLink": "https://doi.org/10.1007/978-3-642-54862-8_11", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Proving+nontermination+via+safety&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref52"}, {"order": "53", "text": "T. C. Le, S. Qin, W. Chin, \"Termination and non-termination specification inference\", <em>Programming Language Design and Implementation</em>, pp. 489-498, 2015.", "title": "Termination and non-termination specification inference", "context": [{"sec": "sec8", "text": " While [51] dynamically enumerate lasso-shaped candidate paths for counterexamples, and then statically prove their feasibility, [52] prove nontermination via reduction to safety proving and [53] uses bi-abduction to construct summaries of terminating and non-terminating behaviors for each method.", "part": "1"}], "links": {"acmLink": "https://doi.org/10.1145/2813885.2737993", "abstract": "Techniques for proving termination and non-termination of imperative programs are usually considered as orthogonal mechanisms. In this paper, we propose a novel mechanism that analyzes and proves both program termination and non-termination at the same time. We first introduce the concept of second-order termination constraints and accumulate a set of relational assumptions on them via a Hoare-style verification. We then solve these assumptions with case analysis to determine the (conditional) t...", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Termination+and+non-termination+specification+inference&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref53"}, {"order": "54", "text": "W. R. Harris, A. Lal, A. V. Nori, S. K. Rajamani, \"Alternation for termination\", <em>Static Analysis Symposium</em>, vol. 6337, pp. 304-319, 2010.", "title": "Alternation for termination", "context": [{"sec": "sec8", "text": " In order to prove both termination and nontermination, [54] compose several program analyses (termination provers for multi-path loops, non-termination provers for cycles, and safety provers).", "part": "1"}], "links": {"crossRefLink": "https://doi.org/10.1007/978-3-642-15769-1_19", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Alternation+for+termination&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref54"}, {"order": "55", "text": "R. Wilhelm, J. Engblom, A. Ermedahl, N. Holsti, S. Thesing, D. Whal-ley, G. Bernat, C. Ferdinand, R. Heckmann, T. Mitra, F. Mueller, I. Puaut, P. Puschner, J. Staschulat, P. Stenstrom, \"The Worst-case Execution Time Problem-Overview of Methods and Survey of Tools\", <em>Transactions on Embedded Computing Systems</em>, vol. 7, no. 3, 2008.", "title": "The Worst-case Execution Time Problem-Overview of Methods and Survey of Tools", "context": [{"sec": "sec8", "text": " Instances of this type of analyses are the worst case execution time (WCET) analysis [55], as well as bound and amortised complexity analysis [56]\u2013[58].", "part": "1"}], "links": {"acmLink": "https://doi.org/10.1145/1347375.1347389", "abstract": "The determination of upper bounds on execution times, commonly called worst-case execution times (WCETs), is a necessary step in the development and validation process for hard real-time systems. This problem is hard if the underlying processor architecture has components, such as caches, pipelines, branch prediction, and other speculative components. This article describes different approaches to this problem and surveys several commercially available tools1 and research prototypes.", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=The+Worst-case+Execution+Time+Problem-Overview+of+Methods+and+Survey+of+Tools&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref55"}, {"order": "56", "text": "C. Alias, A. Darte, P. Feautrier, L. Gonnord, \"Multi-dimensional rankings program termination and complexity bounds of flowchart programs\", <em>Static Analysis Symposium</em>, vol. 6337, pp. 117-133, 2010.", "title": "Multi-dimensional rankings, program termination, and complexity bounds of flowchart programs", "context": [{"sec": "sec8", "text": " Instances of this type of analyses are the worst case execution time (WCET) analysis [55], as well as bound and amortised complexity analysis [56]\u2013[58].", "part": "1"}], "links": {"crossRefLink": "https://doi.org/10.1007/978-3-642-15769-1_8", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Multi-dimensional+rankings%2C+program+termination%2C+and+complexity+bounds+of+flowchart+programs&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref56"}, {"order": "57", "text": "M. Brockschmidt, F. Emmes, S. Falke, C. Fuhs, J. Giesl, \"Alternating runtime and size complexity analysis of integer programs\", <em>Tools and Algorithms for the Construction and Analysis of Systems</em>, vol. 8413, pp. 140-155, 2014.", "title": "Alternating runtime and size complexity analysis of integer programs", "context": [{"sec": "sec8", "text": " Instances of this type of analyses are the worst case execution time (WCET) analysis [55], as well as bound and amortised complexity analysis [56]\u2013[57][58].", "part": "1"}], "googleScholarLink": "https://scholar.google.com/scholar?as_q=Alternating+runtime+and+size+complexity+analysis+of+integer+programs&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref57"}, {"order": "58", "text": "M. Sinn, F. Zuleger, H. Veith, \"A simple and scalable static analysis for bound analysis and amortized complexity analysis\", <em>Computer-Aided Verification</em>, vol. 8559, pp. 745-761, 2014.", "title": "A simple and scalable static analysis for bound analysis and amortized complexity analysis", "context": [{"sec": "sec8", "text": " Instances of this type of analyses are the worst case execution time (WCET) analysis [55], as well as bound and amortised complexity analysis [56]\u2013[58].", "part": "1"}], "links": {"crossRefLink": "https://doi.org/10.1007/978-3-319-08867-9_50", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=A+simple+and+scalable+static+analysis+for+bound+analysis+and+amortized+complexity+analysis&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref58"}, {"order": "59", "text": "S. Gulwani, S. Jain, E. Koskinen, \"Control-flow refinement and progress invariants for bound analysis\", <em>Programming Language Design and Implementation</em>, pp. 375-385, 2009.", "title": "Control-flow refinement and progress invariants for bound analysis", "context": [{"sec": "sec8", "text": " The control flow refinement approach [59], [60] instruments a program with counters and uses progress invariants to compute worst case or average case bounds.", "part": "1"}], "links": {"acmLink": "https://doi.org/10.1145/1542476.1542518", "abstract": "Symbolic complexity bounds help programmers understand the performance characteristics of their implementations. Existing work provides techniques for statically determining bounds of procedures with simple control-flow. However, procedures with nested loops or multiple paths through a single loop are challenging. In this paper we describe two techniques, control-flow refinement and progress invariants, that together enable estimation of precise bounds for procedures with nested and multi-path l...", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Control-flow+refinement+and+progress+invariants+for+bound+analysis&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref59"}, {"order": "60", "text": "H. Y. Chen, S. Mukhopadhyay, Z. Lu, \"Control flow refinement and symbolic computation of average case bound\", <em>Automated Technology for Verification and Analysis</em>, vol. 8172, pp. 334-348, 2013.", "title": "Control flow refinement and symbolic computation of average case bound", "context": [{"sec": "sec8", "text": " The control flow refinement approach [59], [60] instruments a program with counters and uses progress invariants to compute worst case or average case bounds.", "part": "1"}], "links": {"crossRefLink": "https://doi.org/10.1007/978-3-319-02444-8_24", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Control+flow+refinement+and+symbolic+computation+of+average+case+bound&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref60"}, {"order": "61", "text": "C. B. Jones, \"Tentative steps toward a development method for interfering programs\", <em>ACM Trans. Program. Lang. Syst.</em>, vol. 5, pp. 596-619, Oct. 1983.", "title": "Tentative steps toward a development method for interfering programs", "context": [{"sec": "sec8", "text": " One way of extending the analysis to multithreaded programs is using the rely-guarantee technique which is proposed in [61], and explored in several works [62]\u2013[64] for termination analysis.", "part": "1"}], "links": {"acmLink": "https://doi.org/10.1145/69575.69577", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Tentative+steps+toward+a+development+method+for+interfering+programs&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref61"}, {"order": "62", "text": "B. Cook, A. Podelski, A. Rybalchenko, \"Proving thread termination\", <em>Programming Language Design and Implementation</em>, pp. 320-330, 2007.", "title": "Proving thread termination", "context": [{"sec": "sec8", "text": " One way of extending the analysis to multithreaded programs is using the rely-guarantee technique which is proposed in [61], and explored in several works [62]\u2013[64] for termination analysis.", "part": "1"}], "links": {"acmLink": "https://doi.org/10.1145/1250734.1250771", "abstract": "Concurrent programs are often designed such that certain functions executing within critical threads must terminate. Examples of such cases can be found in operating systems, web servers, e-mail clients, etc. Unfortunately, no known automatic program termination prover supports a practical method of proving the termination of threads. In this paper we describe such a procedure. The procedure&#39;s scalability is achieved through the use of environment models that abstract away the surrounding thread...", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Proving+thread+termination&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref62"}, {"order": "63", "text": "A. Gupta, C. Popeea, A. Rybalchenko, \"Predicate abstraction and refinement for verifying multi-threaded programs\", <em>Principles 0) Programming Languages</em>, pp. 331-344, 2011.", "title": "Predicate abstraction and refinement for verifying multi-threaded programs", "context": [{"sec": "sec8", "text": " One way of extending the analysis to multithreaded programs is using the rely-guarantee technique which is proposed in [61], and explored in several works [62]\u2013[63][64] for termination analysis.", "part": "1"}], "links": {"acmLink": "https://doi.org/10.1145/1926385.1926424", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Predicate+abstraction+and+refinement+for+verifying+multi-threaded+programs&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref63"}, {"order": "64", "text": "C. Popeea, A. Rybalchenko, \"Compositional termination proofs for multi-threaded programs\", <em>Tools and Algorithms for the Construction and Analysis of Systems</em>, vol. 7214, pp. 237-25, 2012.", "title": "Compositional termination proofs for multi-threaded programs", "context": [{"sec": "sec8", "text": " One way of extending the analysis to multithreaded programs is using the rely-guarantee technique which is proposed in [61], and explored in several works [62]\u2013[64] for termination analysis.", "part": "1"}], "links": {"crossRefLink": "https://doi.org/10.1007/978-3-642-28756-5_17", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "googleScholarLink": "https://scholar.google.com/scholar?as_q=Compositional+termination+proofs+for+multi-threaded+programs&as_occt=title&hl=en&as_sdt=0%2C31", "refType": "biblio", "id": "ref64"}], "pdfLink": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7371995", "articleId": "7371995", "startPage": "53", "endPage": "64", "pubLink": "https://ieeexplore.ieee.org/xpl/conhome/7371449/proceeding", "issueLink": "https://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=7371976", "publisher": "IEEE", "confLoc": "Lincoln, NE, USA", "chronDate": "9-13 Nov. 2015", "metrics": {"citationCountPaper": 9, "citationCountPatent": 0, "totalDownloads": 103}}